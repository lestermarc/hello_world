--------------------------------------------------------
--  DDL for Package Body DOC_DOCUMENT_LIST_FUNCTIONS
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "DOC_DOCUMENT_LIST_FUNCTIONS" 
IS

/**
* Description
*    This function will convert a string to table type value, which will allow to 'IN' in the SQL statement
*/
FUNCTION IN_LIST(PARAM_STRING IN VARCHAR2,PARAM_SEP IN VARCHAR2 DEFAULT ',')
RETURN CHAR_TABLE_TYPE
IS

TEMP_STRING VARCHAR2(32767) DEFAULT PARAM_STRING||PARAM_SEP;
RESULT_IN_LIST CHAR_TABLE_TYPE := CHAR_TABLE_TYPE();
N NUMBER;

BEGIN
LOOP
EXIT WHEN TEMP_STRING IS NULL;

N := INSTR(TEMP_STRING,PARAM_SEP);

RESULT_IN_LIST.EXTEND;
RESULT_IN_LIST(RESULT_IN_LIST.COUNT) := LTRIM(RTRIM(SUBSTR(TEMP_STRING, 1, N-1)));

TEMP_STRING := SUBSTR(TEMP_STRING,N+1);

END LOOP;

RETURN RESULT_IN_LIST;

END IN_LIST;

/**
* Description
*    According to the report, if the report is used for the customer, and the PAC_PERSON_ID is refer to a customer
                              then the result will be 1
                              else result will be 0
*/
FUNCTION CHECK_CUST_SUPPL(REPORT_NAMES_1 IN VARCHAR2,PAC_PERSON_ID IN NUMBER)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN

CASE REPORT_NAMES_1
WHEN 'CUST' THEN SELECT 1 INTO RESULT
                 FROM PAC_CUSTOM_PARTNER CUS
                 WHERE PAC_PERSON_ID = CUS.PAC_CUSTOM_PARTNER_ID;
WHEN 'SUPPL' THEN SELECT 1 INTO RESULT
                  FROM PAC_SUPPLIER_PARTNER SUP
                  WHERE PAC_PERSON_ID = SUP.PAC_SUPPLIER_PARTNER_ID;
END CASE;

RETURN RESULT;

EXCEPTION
WHEN OTHERS THEN RETURN 0;

END CHECK_CUST_SUPPL;

/**
* Description
*    According to the report, if the record between PARAMETER_0 AND PARAMETER_1
                            then the result will be 1
                            else result will be 0
*/
FUNCTION CHECK_RECORD_IN_RANGE(REPORT_NAMES_2 IN VARCHAR2, REFERENCE_1 IN VARCHAR2, REFERENCE_2 IN VARCHAR2, PARAMETER_0 IN VARCHAR2, PARAMETER_1 IN VARCHAR2)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN
CASE REPORT_NAMES_2
WHEN 'GOOD'  THEN IF REFERENCE_1 BETWEEN PARAMETER_0 AND PARAMETER_1
                  THEN RESULT := 1;
                  ELSE RESULT := 0;
                  END IF;
WHEN 'CUST'  THEN IF REFERENCE_2 BETWEEN PARAMETER_0 AND PARAMETER_1
                  THEN RESULT := 1;
                  ELSE RESULT := 0;
                  END IF;
WHEN 'SUPPL' THEN IF REFERENCE_2 BETWEEN PARAMETER_0 AND PARAMETER_1
                  THEN RESULT := 1;
                  ELSE RESULT := 0;
                  END IF;
END CASE;

RETURN RESULT;

EXCEPTION
WHEN OTHERS THEN RETURN 0;

END CHECK_RECORD_IN_RANGE;

/**
* Description
*    USED IN REPORT: DOC_CUST_ORDER_PORT_CUST_BATCH
                     DOC_CUST_ORDER_PORT_GOOD_BATCH
                     DOC_CUST_ECHEANCIER_CUST_BATCH
                     DOC_CUST_ECHEANCIER_GOOD_BATCH
                     DOC_SUPPL_ORDER_PORT_SUPPL_BATCH
                     DOC_SUPPL_ORDER_PORT_GOOD_BATCH
                     DOC_SUPPL_ECHEANCIER_SUPPL_BATCH
                     DOC_SUPPL_ECHEANCIER_GOOD_BATCH
     INSTEAD OF CRYSTAL'S SELECTION FORMULA: {DOC_GAUGE_STRUCTURED.C_GAUGE_TITLE}='30' OR {DOC_POSITION_DETAIL.PDE_FINAL_DELAY}<={@TEST_DATE}
*/
FUNCTION ORDER_ECHEANCIER_BATCH(REPORT_NAMES IN VARCHAR2, PARAM_FINAL_DELAY IN DATE,PDE_FINAL_DELAY IN DATE, C_GAUGE_TITLE IN VARCHAR2)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN

IF REPORT_NAMES IN ('DOC_CUST_ORDER_PORT_CUST_BATCH',
                    'DOC_CUST_ORDER_PORT_GOOD_BATCH',
                    'DOC_CUST_ECHEANCIER_CUST_BATCH',
                    'DOC_CUST_ECHEANCIER_GOOD_BATCH',
                    'DOC_SUPPL_ECHEANCIER_SUPPL_BATCH',
                    'DOC_SUPPL_ECHEANCIER_GOOD_BATCH')
THEN IF C_GAUGE_TITLE = '30' OR PDE_FINAL_DELAY <= PARAM_FINAL_DELAY
     THEN RESULT := 1;
     ELSE RESULT := 0;
     END IF;
ELSIF REPORT_NAMES IN ('DOC_SUPPL_ORDER_PORT_SUPPL_BATCH',
                       'DOC_SUPPL_ORDER_PORT_GOOD_BATCH')
THEN IF PDE_FINAL_DELAY <= PARAM_FINAL_DELAY
     THEN RESULT := 1;
     ELSE RESULT := 0;
     END IF;
ELSE RESULT := 1;
END IF;

RETURN RESULT;

END ORDER_ECHEANCIER_BATCH;


/**
* Description
*    USED IN REPORT: DOC_CUST_ORDER_PORT_CUST_BATCH
                  DOC_CUST_ORDER_PORT_GOOD_BATCH
     INSTEAD OF CRYSTAL'S FORMULA {@TEST_ATTRIB} Allocation
     ALLOCATION
     PARAMETER_11 = '0'   NO CHECK BOX SELECTED
     PARAMETER_11 = '1'   NONE
     PARAMETER_11 = '2'   DOCUMENT
     PARAMETER_11 = '3'   NONE,DOCUMENT
     PARAMETER_11 = '4'   STOCK
     PARAMETER_11 = '5'   NONE,STOCK
     PARAMETER_11 = '6'   DOCUMENT,STOCK
     PARAMETER_11 = '7'   ALL CHECK BOX SELECTED
*/
FUNCTION CUST_ORDER_PORT_BATCH(REPORT_NAMES IN VARCHAR2, PARAMETER_11 IN VARCHAR2, FAN_STK_QTY IN NUMBER, FAN_NETW_QTY IN NUMBER)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN

IF REPORT_NAMES IN ('DOC_CUST_ORDER_PORT_CUST_BATCH','DOC_CUST_ORDER_PORT_GOOD_BATCH')
THEN CASE PARAMETER_11
     WHEN '0' THEN RESULT := 1;
     WHEN '1' THEN IF (FAN_STK_QTY IS NULL) AND (FAN_NETW_QTY IS NULL)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '2' THEN IF (FAN_NETW_QTY > 0)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '3' THEN IF (FAN_NETW_QTY> 0 OR (FAN_STK_QTY IS NULL AND FAN_NETW_QTY IS NULL))
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '4' THEN IF (FAN_STK_QTY > 0)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '5' THEN IF (FAN_STK_QTY > 0 OR (FAN_STK_QTY IS NULL AND FAN_NETW_QTY IS NULL))
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '6' THEN IF (FAN_NETW_QTY > 0 OR FAN_STK_QTY > 0)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '7' THEN RESULT := 1;
     ELSE RESULT := 0;
     END CASE;
ELSE RESULT := 1;
END IF;

RETURN RESULT;

END CUST_ORDER_PORT_BATCH;

/**
* Description
*    USED IN REPORT: DOC_CUST_DELIVERY_PORT_CUST_BATCH
                  DOC_CUST_DELIVERY_PORT_GOOD_BATCH
     INSTEAD OF CRYSTAL'S FORMULA {@TEST_COLIS} Pracle
*/
FUNCTION CUST_DELIVERY_PORT_BATCH(REPORT_NAMES IN VARCHAR2, PARAMETER_12 IN VARCHAR2, DOC_DOCUMENT_ID IN NUMBER)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN

IF REPORT_NAMES IN ('DOC_CUST_DELIVERY_PORT_CUST_BATCH',
                    'DOC_CUST_DELIVERY_PORT_GOOD_BATCH' )
THEN CASE PARAMETER_12
     WHEN '0' THEN RESULT := 1;
     WHEN '1' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '2' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('1')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '3' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0','1')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '4' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('2')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '5' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0','2')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '6' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('1','2')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '7' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0','1','2')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '8' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('3')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '9' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0','3')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '10' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('1','3')
               THEN RESULT := 1;
               ELSE RESULT := 0;
               END IF;
     WHEN '11' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0','1','3')
               THEN RESULT := 1;
               ELSE RESULT := 0;
               END IF;
     WHEN '12' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('2','3')
               THEN RESULT := 1;
               ELSE RESULT := 0;
               END IF;
     WHEN '13' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('0','2','3')
               THEN RESULT := 1;
               ELSE RESULT := 0;
               END IF;
     WHEN '14' THEN IF DOC_PACKING.GETPACKING(DOC_DOCUMENT_ID) IN ('1','2','3')
               THEN RESULT := 1;
               ELSE RESULT := 0;
               END IF;
     WHEN '15' THEN RESULT := 1;
     END CASE;
ELSE RESULT := 1;
END IF;

RETURN RESULT;

EXCEPTION
WHEN OTHERS THEN RETURN 0;

END CUST_DELIVERY_PORT_BATCH;

/**
* Description
*    USED IN REPORT: DOC_SUPPL_ORDER_PORT_SUPPL_BATCH
                     DOC_SUPPL_ORDER_PORT_GOOD_BATCH
     INSTEAD OF CRYSTAL'S FORMULA {@TEST_ATTRIB} Allocation
     ALLOCATION
     PARAMETER_11 = '0'   NO CHECK BOX SELECTED
     PARAMETER_11 = '1'   NONE
     PARAMETER_11 = '2'   DOCUMENT
     PARAMETER_11 = '3'   NONE,DOCUMENT
     PARAMETER_11 = '4'   STOCK
     PARAMETER_11 = '5'   NONE,STOCK
     PARAMETER_11 = '6'   DOCUMENT,STOCK
     PARAMETER_11 = '7'   ALL CHECK BOX SELECTED
*/
FUNCTION SUPPL_ORDER_PORT_BATCH(REPORT_NAMES IN VARCHAR2,PARAMETER_11 IN VARCHAR2, FAN_STK_QTY IN NUMBER, FAN_NETW_QTY IN NUMBER)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN

IF REPORT_NAMES IN ('DOC_SUPPL_ORDER_PORT_SUPPL_BATCH',
                    'DOC_SUPPL_ORDER_PORT_GOOD_BATCH')
THEN CASE PARAMETER_11
     WHEN '0' THEN RESULT := 1;
     WHEN '1' THEN IF (FAN_STK_QTY IS NULL) AND (FAN_NETW_QTY IS NULL)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '2' THEN IF (FAN_NETW_QTY > 0)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '3' THEN IF (FAN_NETW_QTY> 0 OR (FAN_STK_QTY IS NULL AND FAN_NETW_QTY IS NULL))
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '4' THEN IF (FAN_STK_QTY > 0)
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '5' THEN IF (FAN_STK_QTY > 0 OR (FAN_STK_QTY IS NULL AND FAN_NETW_QTY IS NULL))
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
     WHEN '6' THEN RESULT := 1;
     WHEN '7' THEN RESULT := 1;
     ELSE RESULT := 0;
     END CASE;
ELSE RESULT := 1;
END IF;

RETURN RESULT;

END SUPPL_ORDER_PORT_BATCH;

/**
* Description
*    USED IN REPORT: DOC_SUPPL_ORDER_PORT_SUPPL_BATCH
                  DOC_SUPPL_ORDER_PORT_GOOD_BATCH
     INSTEAD OF CRYSTAL'S FORMULA {@TEST_RETARD} Lateness
*/
FUNCTION SUPPL_ORDER_PORT_BATCH_2(REPORT_NAMES IN VARCHAR2, PARAMETER_13 IN NUMBER, C_DOC_POS_STATUS IN NUMBER, PDE_FINAL_DELAY IN DATE)
RETURN NUMBER
IS

RESULT NUMBER(1);
DELAY_DAYS  NUMBER(38);

BEGIN

IF REPORT_NAMES IN ('DOC_SUPPL_ORDER_PORT_SUPPL_BATCH',
                    'DOC_SUPPL_ORDER_PORT_GOOD_BATCH')
THEN IF C_DOC_POS_STATUS <> '04'
     THEN DELAY_DAYS := TRUNC(SYSDATE) - TRUNC(PDE_FINAL_DELAY);
     ELSE DELAY_DAYS := 0;
     END IF;
     IF PARAMETER_13 > 0
     THEN IF DELAY_DAYS > PARAMETER_13
          THEN RESULT := 1;
          ELSE RESULT := 0;
          END IF;
     ELSIF PARAMETER_13 < 0
     THEN IF DELAY_DAYS < 0
          THEN RESULT := 1;
          ELSE RESULT := 0;
          END IF;
     ELSE RESULT := 1;
     END IF;
ELSE RESULT := 1;
END IF;

RETURN RESULT;

EXCEPTION
WHEN OTHERS THEN RETURN 0;

END SUPPL_ORDER_PORT_BATCH_2;

/**
* Description
*    USED IN REPORT: DOC_SUPPL_TURNOVER_SUPPL_BATCH
                     DOC_SUPPL_TURNOVER_GOOD_BATCH
     Turnover with credit over
*/
FUNCTION SUPPL_TURNOVER_BATCH(REPORT_NAMES IN VARCHAR2, PARAMETER_9 IN VARCHAR2, C_GAUGE_TITLE IN VARCHAR2, GAS_FINANCIAL_CHARGE IN NUMBER)
RETURN NUMBER
IS

RESULT NUMBER(1);

BEGIN

IF REPORT_NAMES IN ('DOC_SUPPL_TURNOVER_SUPPL_BATCH',
                    'DOC_SUPPL_TURNOVER_GOOD_BATCH')
THEN
CASE PARAMETER_9
WHEN '0' THEN IF C_GAUGE_TITLE = '4'
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
WHEN '1' THEN IF (C_GAUGE_TITLE = '5' AND GAS_FINANCIAL_CHARGE = 1) OR
                 (C_GAUGE_TITLE = '4')
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
WHEN '2' THEN IF C_GAUGE_TITLE = '5' AND GAS_FINANCIAL_CHARGE = 1
              THEN RESULT := 1;
              ELSE RESULT := 0;
              END IF;
END CASE;
ELSE RESULT := 1;
END IF;

RETURN RESULT;

EXCEPTION
WHEN OTHERS THEN RETURN 0;

END SUPPL_TURNOVER_BATCH;

END DOC_DOCUMENT_LIST_FUNCTIONS;
