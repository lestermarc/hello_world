--------------------------------------------------------
--  DDL for Package Body FAM_RPT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "FAM_RPT" 
IS

/**
*Description
*   STORED PROCEDURE USED FOR THE REPORT FAM_FIXED_ASSETS_FORM.RPT
*/
PROCEDURE FAM_FIXED_ASSETS_FORM_RPT_PK (
   AREFCURSOR       IN OUT   CRYSTAL_CURSOR_TYPES.DUALCURSORTYP,
   PARAMETER_0      IN       VARCHAR2,
   PARAMETER_1      IN       VARCHAR2,
   PARAMETER_2      IN       VARCHAR2,
   PARAMETER_4      IN       VARCHAR2,
   PARAMETER_5      IN       VARCHAR2,
   PARAMETER_6      IN       VARCHAR2,
   PARAMETER_7      IN       VARCHAR2,
   PARAMETER_8      IN       VARCHAR2,
   PARAMETER_9      IN       VARCHAR2,
   PROCUSER_LANID   IN       PCS.PC_LANG.LANID%TYPE
)
IS

   vpc_lang_id   pcs.pc_lang.pc_lang_id%TYPE;
   p_0           VARCHAR2 (30 CHAR);
   p_1           VARCHAR2 (30 CHAR);
   p_4           VARCHAR2 (30 CHAR);
   p_5           VARCHAR2 (30 CHAR);
   p_7           DATE;
   p_8           DATE;
BEGIN
   pcs.PC_I_LIB_SESSION.setlanid (procuser_lanid);
   vpc_lang_id := pcs.PC_I_LIB_SESSION.getuserlangid;

   IF parameter_0 IS NULL
   THEN
      p_0 := '(';
   ELSE
      p_0 := parameter_0;
   END IF;

   IF parameter_1 IS NULL
   THEN
      p_1 := '}';
   ELSE
      p_1 := parameter_1;
   END IF;

   IF parameter_4 IS NULL
   THEN
      p_4 := '(';
   ELSE
      p_4 := parameter_4;
   END IF;

   IF parameter_5 IS NULL
   THEN
      p_5 := '}';
   ELSE
      p_5 := parameter_5;
   END IF;

   IF parameter_7 = '0'
   THEN
      p_7 := TO_DATE (10000101, 'yyyyMMdd');
   ELSE
      p_7 := TO_DATE (parameter_7, 'yyyyMMdd');
   END IF;

   IF parameter_8 = '0'
   THEN
      p_8 := TO_DATE (30001231, 'yyyyMMdd');
   ELSE
      p_8 := TO_DATE (parameter_8, 'yyyyMMdd');
   END IF;

   OPEN arefcursor FOR
      SELECT fix.fam_fixed_assets_id fam_fixed_assets_id1,
             fix.fam_fixed_assets_categ_id, fix.c_fixed_assets_typ,
             fix.c_ownership, fix.c_fixed_assets_status, fix.dic_liability_id,
             fix.dic_location_id, fix.dic_state_id, fix.dic_use_unit_id,
             fix.fix_number, fix.fix_description, fix.fix_short_descr,
             fix.fix_long_descr, fix.fix_year, fix.fix_model,
             fix.fix_serial_number, fix.fix_warrant_duration,
             fix.fix_warrant_end, fix.fix_landowner_number,
             fix.fix_land_registry_number, fix.fix_surface, fix.fix_volume,
             fix.fix_state_date, fix.fix_purchase_date, fix.fix_working_date,
             fix.fix_unit_quantity, fix.fix_man_accounting_allowed,
             fix.acs_division_account_id, acc1.acc_number acc_number_div,
             des1.des_description_summary des_description_summary_div,
             fix.acs_cda_account_id, acc2.acc_number acc_number_cda,
             des2.des_description_summary des_description_summary_cda,
             fix.acs_pf_account_id, acc3.acc_number acc_number_pf,
             des3.des_description_summary des_description_summary_pf,
             fix.acs_pj_account_id, acc4.acc_number acc_number_pj,
             des4.des_description_summary des_description_summary_pj,
             fix.fam_fam_fixed_assets_id, fix.pac_person_id, per.per_name,
             fix.hrm_person_id, hpe.per_fullname, fix.doc_record_id,
             dre.rco_title, dre.rco_description,
             fix_far.c_fixed_assets_typ c_fixed_assets_typ_far,
             fix_far.fix_number fix_number_far,
             fix_far.fix_short_descr fix_short_descr_far,
             fix_son.c_fixed_assets_typ c_fixed_assets_typ_son,
             fix_son.fix_number fix_number_son,
             fix_son.fix_short_descr fix_short_descr_son, fix.a_datecre,
             fix.a_datemod, fix.a_idmod, fix.a_idcre,
             fix.dic_fam_fix_freecod1_id, fix.dic_fam_fix_freecod2_id,
             fix.dic_fam_fix_freecod3_id, fix.dic_fam_fix_freecod4_id,
             fix.dic_fam_fix_freecod5_id, fix.dic_fam_fix_freecod6_id,
             fix.dic_fam_fix_freecod7_id, fix.dic_fam_fix_freecod8_id,
             fix.dic_fam_fix_freecod9_id, fix.dic_fam_fix_freecod10_id,
             cat.cat_descr,
             (SELECT MAX (fdo.fdo_ext_number)
                FROM fam_imputation fim, fam_document fdo
               WHERE fim.fam_fixed_assets_id =
                                       fix.fam_fixed_assets_id
                 AND fim.fam_document_id = fdo.fam_document_id)
                                                               fdo_ext_number,
             gco.goo_major_reference
        FROM doc_record dre,
             hrm_person hpe,
             pac_person per,
             acs_account acc1,
             acs_account acc2,
             acs_account acc3,
             acs_account acc4,
             acs_description des1,
             acs_description des2,
             acs_description des3,
             acs_description des4,
             fam_fixed_assets fix_son,
             fam_fixed_assets fix_far,
             fam_fixed_assets fix,
             fam_fixed_assets_categ cat,
             gco_good gco
       WHERE fix.fam_fixed_assets_id = fix_far.fam_fam_fixed_assets_id(+)
         AND fix_son.fam_fixed_assets_id(+) = fix.fam_fam_fixed_assets_id
         AND fix.acs_division_account_id = acc1.acs_account_id(+)
         AND fix.acs_cda_account_id = acc2.acs_account_id(+)
         AND fix.acs_pf_account_id = acc3.acs_account_id(+)
         AND fix.acs_pj_account_id = acc4.acs_account_id(+)
         AND acc1.acs_account_id = des1.acs_account_id(+)
         AND des1.pc_lang_id(+) = vpc_lang_id
         AND acc2.acs_account_id = des2.acs_account_id(+)
         AND des2.pc_lang_id(+) = vpc_lang_id
         AND acc3.acs_account_id = des3.acs_account_id(+)
         AND des3.pc_lang_id(+) = vpc_lang_id
         AND acc4.acs_account_id = des4.acs_account_id(+)
         AND des4.pc_lang_id(+) = vpc_lang_id
         AND fix.pac_person_id = per.pac_person_id(+)
         AND fix.hrm_person_id = hpe.hrm_person_id(+)
         AND fix.doc_record_id = dre.doc_record_id(+)
         AND fix.fam_fixed_assets_categ_id = cat.fam_fixed_assets_categ_id(+)
         AND fix.gco_good_id = gco.gco_good_id(+)
         AND fix.fix_number >= p_0
         AND fix.fix_number <= p_1
         AND cat.cat_descr >= p_4
         AND cat.cat_descr <= p_5
         AND INSTR (parameter_2, fix.c_fixed_assets_status) > 0
         AND (   parameter_6 = '0'
              OR (    parameter_6 = '1'
                  AND fix.a_datecre >= p_7
                  AND fix.a_datecre <= p_8
                  AND (fix.a_idcre = parameter_9 OR parameter_9 IS NULL)
                 )
              OR (    parameter_6 = '2'
                  AND fix.a_datemod >= p_7
                  AND fix.a_datemod <= p_8
                  AND (fix.a_idmod = parameter_9 OR parameter_9 IS NULL)
                 )
             );
END fam_fixed_assets_form_rpt_PK;


/*
* Description
*   STORED PROCEDURE USED FOR THE SUB-REPORT FAM_AMO_APPLICATION.RPT OF REPORT FAM_FIXED_ASSETS_FORM.RPT
*/
PROCEDURE fam_amo_application_sub_rpt_PK (
   arefcursor    IN OUT   crystal_cursor_types.dualcursortyp,
   parameter_0   IN       VARCHAR2
)
IS

BEGIN
   OPEN arefcursor FOR
      SELECT app.fam_fixed_assets_id, app.fam_amortization_method_id,
             app.fam_managed_value_id, app.app_lin_amortization,
             app.app_dec_amortization, app.app_interest_rate,
             app.app_interest_rate_2, app.app_month_duration,
             app.app_amortization_begin, app.app_amortization_end,
             app.fam_amo_application_id,
             app.dic_fam_coefficient_id dic_fam_coefficient_2_id,
             val.val_key, met.amo_descr, cat.cat_descr, def.fam_default_id,
             def.def_lin_amortization, def.def_dec_amortization,
             def.def_interest_rate, def.def_interest_rate_2,
             def.dic_fam_coefficient_id dic_fam_coefficient_1_id,
             fpl.pye_no_exercise, fpl.start_amo_amount, fpl.amo_amount,
             fpl.sum_amo_amount, fpl.end_amo_amount
        FROM fam_fixed_assets ass,
             fam_amo_application app,
             fam_default def,
             fam_fixed_assets_categ cat,
             fam_amortization_method met,
             fam_managed_value val,
             (SELECT fph.fam_fixed_assets_id, fph.fam_managed_value_id,
                     fpe.pye_no_exercise,
                     fpe.fpe_elem_1_amount start_amo_amount,
                     fpe.fpe_adapted_amo_lc amo_amount,
                     fpe.fpe_amortization_lc sum_amo_amount,
                     fpe.fpe_amortization_lc end_amo_amount
                FROM fam_plan_header fph, fam_plan_exercise fpe
               WHERE fph.fam_plan_header_id = fpe.fam_plan_header_id
                 AND fph.c_amo_plan_status = '1'
                 AND fph.fam_fixed_assets_id = TO_NUMBER(parameter_0)) fpl
       WHERE app.fam_fixed_assets_id = ass.fam_fixed_assets_id
         AND app.fam_managed_value_id = val.fam_managed_value_id
         AND app.fam_amortization_method_id = met.fam_amortization_method_id
         AND ass.fam_fixed_assets_categ_id = cat.fam_fixed_assets_categ_id
         AND def.fam_fixed_assets_categ_id = ass.fam_fixed_assets_categ_id
         AND def.fam_amortization_method_id = app.fam_amortization_method_id
         AND val.fam_managed_value_id = fpl.fam_managed_value_id(+)
         AND app.fam_fixed_assets_id = TO_NUMBER(parameter_0);
END fam_amo_application_sub_rpt_PK;


/*Description
 STORED PROCEDURE USED FOR THE SUB-REPORT FAM_IMPUTATION_IMMO.RPT OF REPORT FAM_FIXED_ASSETS_FORM.RPT
*/
PROCEDURE FAM_IMPUTATION_IMMO_SUB_RPT_PK(
   arefcursor    IN OUT   crystal_cursor_types.dualcursortyp,
   parameter_0   IN       VARCHAR2
)

IS

BEGIN

 OPEN arefcursor FOR
 SELECT
 IMP.FAM_IMPUTATION_ACCOUNT_ID,
 IMP.FAM_AMO_APPLICATION_ID,
 VAL.VAL_KEY,
 CAT.CAT_DESCR,
 ASS.FAM_FIXED_ASSETS_ID,
 IMP.C_FAM_IMPUTATION_TYP,
 IMP.ACS_FINANCIAL_ACCOUNT_ID,
 ACC.ACC_NUMBER ACC_NUMBER_FIN,
 IMP.ACS_DIVISION_ACCOUNT_ID,
 DIV.ACC_NUMBER ACC_NUMBER_DIV,
 IMP.ACS_CPN_ACCOUNT_ID,
 CPN.ACC_NUMBER ACC_NUMBER_CPN,
 IMP.ACS_CDA_ACCOUNT_ID,
 CDA.ACC_NUMBER ACC_NUMBER_CDA,
 IMP.ACS_PF_ACCOUNT_ID,
 PF.ACC_NUMBER ACC_NUMBER_PF,
 IMP.ACS_PJ_ACCOUNT_ID,
 PJ.ACC_NUMBER ACC_NUMBER_PJ
FROM
 ACS_ACCOUNT PJ,
 ACS_ACCOUNT PF,
 ACS_ACCOUNT CDA,
 ACS_ACCOUNT CPN,
 ACS_ACCOUNT DIV,
 ACS_ACCOUNT ACC,
 FAM_DEFAULT DEF,
 FAM_FIXED_ASSETS ASS,
 FAM_IMPUTATION_ACCOUNT IMP,
 FAM_AMO_APPLICATION APP,
 FAM_FIXED_ASSETS_CATEG CAT,
 FAM_MANAGED_VALUE VAL
WHERE
 IMP.FAM_AMO_APPLICATION_ID = APP.FAM_AMO_APPLICATION_ID AND
 APP.FAM_FIXED_ASSETS_ID = ASS.FAM_FIXED_ASSETS_ID AND
 ASS.FAM_FIXED_ASSETS_CATEG_ID = CAT.FAM_FIXED_ASSETS_CATEG_ID AND
 CAT.FAM_FIXED_ASSETS_CATEG_ID = DEF.FAM_FIXED_ASSETS_CATEG_ID AND
 DEF.FAM_MANAGED_VALUE_ID = VAL.FAM_MANAGED_VALUE_ID AND
 APP.FAM_MANAGED_VALUE_ID = DEF.FAM_MANAGED_VALUE_ID AND
 IMP.ACS_FINANCIAL_ACCOUNT_ID = ACC.ACS_ACCOUNT_ID(+) AND
 IMP.ACS_DIVISION_ACCOUNT_ID = DIV.ACS_ACCOUNT_ID(+) AND
 IMP.ACS_CPN_ACCOUNT_ID = CPN.ACS_ACCOUNT_ID(+) AND
 IMP.ACS_CDA_ACCOUNT_ID = CDA.ACS_ACCOUNT_ID(+) AND
 IMP.ACS_PF_ACCOUNT_ID = PF.ACS_ACCOUNT_ID(+) AND
 IMP.ACS_PJ_ACCOUNT_ID = PJ.ACS_ACCOUNT_ID(+) AND
 ASS.FAM_FIXED_ASSETS_ID = TO_NUMBER(parameter_0);

END FAM_IMPUTATION_IMMO_SUB_RPT_PK;



/*Description
  STORED PROCEDURE USED FOR THE SUB-REPORT FAM_IMPUTATION_CATEG.RPT OF REPORT FAM_FIXED_ASSETS_FORM.RPT
*/
PROCEDURE FAM_IMP_CATEG_SUB_RPT_PK(
   arefcursor    IN OUT   crystal_cursor_types.dualcursortyp,
   parameter_0   IN       VARCHAR2
)
IS

BEGIN

OPEN arefcursor FOR
SELECT
  IMP.FAM_IMPUTATION_ACCOUNT_ID,
  IMP.FAM_DEFAULT_ID,
  VAL.VAL_KEY,
  ASS.FAM_FIXED_ASSETS_ID,
  IMP.C_FAM_IMPUTATION_TYP,
  IMP.ACS_FINANCIAL_ACCOUNT_ID,
  ACC.ACC_NUMBER ACC_NUMBER_FIN,
  IMP.ACS_DIVISION_ACCOUNT_ID,
  DIV.ACC_NUMBER ACC_NUMBER_DIV,
  IMP.ACS_CPN_ACCOUNT_ID,
  CPN.ACC_NUMBER ACC_NUMBER_CPN,
  IMP.ACS_CDA_ACCOUNT_ID,
  CDA.ACC_NUMBER ACC_NUMBER_CDA,
  IMP.ACS_PF_ACCOUNT_ID,
  PF.ACC_NUMBER ACC_NUMBER_PF,
  IMP.ACS_PJ_ACCOUNT_ID,
  PJ.ACC_NUMBER ACC_NUMBER_PJ
FROM
  ACS_ACCOUNT PJ,
  ACS_ACCOUNT PF,
  ACS_ACCOUNT CDA,
  ACS_ACCOUNT CPN,
  ACS_ACCOUNT DIV,
  ACS_ACCOUNT ACC,
  FAM_FIXED_ASSETS ASS,
  FAM_IMPUTATION_ACCOUNT IMP,
  FAM_DEFAULT DEF,
  FAM_MANAGED_VALUE VAL
WHERE
  IMP.FAM_DEFAULT_ID = DEF.FAM_DEFAULT_ID AND
  DEF.FAM_MANAGED_VALUE_ID = VAL.FAM_MANAGED_VALUE_ID AND
  DEF.FAM_FIXED_ASSETS_CATEG_ID = ASS.FAM_FIXED_ASSETS_CATEG_ID AND
  IMP.ACS_FINANCIAL_ACCOUNT_ID = ACC.ACS_ACCOUNT_ID(+) AND
  IMP.ACS_DIVISION_ACCOUNT_ID = DIV.ACS_ACCOUNT_ID(+) AND
  IMP.ACS_CPN_ACCOUNT_ID = CPN.ACS_ACCOUNT_ID(+) AND
  IMP.ACS_CDA_ACCOUNT_ID = CDA.ACS_ACCOUNT_ID(+) AND
  IMP.ACS_PF_ACCOUNT_ID = PF.ACS_ACCOUNT_ID(+) AND
  IMP.ACS_PJ_ACCOUNT_ID = PJ.ACS_ACCOUNT_ID(+) AND
  ASS.FAM_FIXED_ASSETS_ID = TO_NUMBER(parameter_0);

END FAM_IMP_CATEG_SUB_RPT_PK;



/*Description
  STORED PROCEDURE USED FOR THE SUB-REPORT FAM_ADDRESS.RPT OF REPORT FAM_FIXED_ASSETS_FORM.RPT
*/
PROCEDURE FAM_ADDRESS_SUB_RPT_PK(
   arefcursor    IN OUT   crystal_cursor_types.dualcursortyp,
   parameter_0   IN       VARCHAR2
)
IS

BEGIN

OPEN arefcursor FOR
SELECT
  PER.PAC_PERSON_ID,
  PER.DIC_PERSON_POLITNESS_ID,
  PER.PER_NAME,
  PER.PER_FORENAME,
  PER.PER_SHORT_NAME,
  PER.PER_ACTIVITY,
  PER.PER_KEY1,
  PER.PER_KEY2,
  ADR.ADD_PRINCIPAL,
  ADR.DIC_ADDRESS_TYPE_ID,
  ADR.ADD_ADDRESS1,
  CTY.CNTID,
  CTY.CNTNAME,
  ADR.PAC_ADDRESS_ID,
  ADR.ADD_ZIPCODE,
  ADR.ADD_CITY,
  ADR.ADD_STATE,
  ADR.ADD_FORMAT,
  ADR.PC_LANG_ID,
  ADR.C_PARTNER_STATUS,
  FAD.FAM_ADDRESS_ID,
  FAD.FAM_FIXED_ASSETS_ID,
  FAD.DIC_LINK_TYP_ID
FROM
  PCS.PC_CNTRY CTY,
  PAC_ADDRESS ADR,
  PAC_PERSON PER,
  FAM_ADDRESS FAD
WHERE
  ADR.PAC_PERSON_ID = PER.PAC_PERSON_ID AND
  CTY.PC_CNTRY_ID = ADR.PC_CNTRY_ID AND
  FAD.PAC_PERSON_ID = PER.PAC_PERSON_ID(+) AND
  FAD.FAM_FIXED_ASSETS_ID = TO_NUMBER(parameter_0);

END FAM_ADDRESS_SUB_RPT_PK;


/*Description
  STORED PROCEDURE USED FOR THE SUB-REPORT FAM_INSURANCE_POLICY.RPT OF REPORT FAM_FIXED_ASSETS_FORM.RPT
*/
PROCEDURE FAM_INSUR_POLICY_SUB_RPT_PK(
   arefcursor    IN OUT   crystal_cursor_types.dualcursortyp,
   parameter_0   IN       VARCHAR2
)
IS

BEGIN

OPEN arefcursor FOR
SELECT
  PER.PAC_PERSON_ID,
  PER.DIC_PERSON_POLITNESS_ID,
  PER.PER_NAME,
  PER.PER_FORENAME,
  PER.PER_SHORT_NAME,
  PER.PER_ACTIVITY,
  PER.PER_KEY1,
  PER.PER_KEY2,
  ADR.ADD_PRINCIPAL,
  ADR.DIC_ADDRESS_TYPE_ID,
  ADR.ADD_ADDRESS1,
  CTY.CNTID,
  CTY.CNTNAME,
  ADR.PAC_ADDRESS_ID,
  ADR.ADD_ZIPCODE,
  ADR.ADD_CITY,
  ADR.ADD_STATE,
  ADR.ADD_FORMAT,
  ADR.PC_LANG_ID,
  ADR.C_PARTNER_STATUS,
  FIS.FAM_FIXED_ASSETS_ID,
  FIS.INS_DECLARED_VALUE,
  FIS.INS_EFFECTIVE_VALUE,
  FIS.INS_NEW_VALUE,
  FIP.FAM_INSURANCE_POLICY_ID,
  FIP.POL_NUMBER,
  FIP.POL_DESIGNATION
FROM
  PCS.PC_CNTRY CTY,
  PAC_ADDRESS ADR,
  PAC_PERSON PER,
  FAM_INSURANCE FIS,
  FAM_INSURANCE_POLICY FIP
WHERE
  ADR.PAC_PERSON_ID = PER.PAC_PERSON_ID AND
  CTY.PC_CNTRY_ID = ADR.PC_CNTRY_ID AND
  FIS.FAM_INSURANCE_POLICY_ID = FIP.FAM_INSURANCE_POLICY_ID AND
  FIP.PAC_PERSON_ID = PER.PAC_PERSON_ID AND
  FIS.FAM_FIXED_ASSETS_ID = TO_NUMBER(parameter_0);
END FAM_INSUR_POLICY_SUB_RPT_PK;




/**
*Description
 Used for report FAM_BALANCE.RPT
*@created JLIU 1.12.2009
*@lastUpdate 1.12.2008
*/
PROCEDURE FAM_BALANCE_RPT_PK(
    arefcursor       IN OUT   crystal_cursor_types.dualcursortyp
   ,procuser_lanid   IN       pcs.pc_lang.lanid%TYPE
   ,PARAMETER_1      IN       VARCHAR2
   ,PARAMETER_2      IN       VARCHAR2
   ,PARAMETER_3      IN       VARCHAR2
   ,PARAMETER_4      IN       VARCHAR2
   ,PARAMETER_6      IN       VARCHAR2
   ,PARAMETER_7      IN       VARCHAR2
   ,PARAMETER_8      IN       VARCHAR2
   ,PARAMETER_9      IN       VARCHAR2
   ,PARAMETER_10     IN       VARCHAR2
   ,PARAMETER_11     IN       VARCHAR2
   ,PARAMETER_12     IN       VARCHAR2
   ,PARAMETER_13     IN       VARCHAR2
   ,PARAMETER_14     IN       VARCHAR2
   ,PARAMETER_15     IN       VARCHAR2
   ,PARAMETER_16     IN       VARCHAR2
   ,PARAMETER_17     IN       VARCHAR2
   ,PARAMETER_18     IN       VARCHAR2
   ,PARAMETER_19     IN       VARCHAR2
   ,PARAMETER_20     IN       VARCHAR2
)
IS


vpc_lang_id   pcs.pc_lang.pc_lang_id%TYPE;              --user language id



BEGIN
   pcs.PC_I_LIB_SESSION.setlanid (procuser_lanid);
   vpc_lang_id := pcs.PC_I_LIB_SESSION.getuserlangid;

   OPEN arefcursor FOR
      SELECT
      FIX.FAM_FIXED_ASSETS_ID,
      FIX.FIX_NUMBER,
      FIX.FIX_SHORT_DESCR,
      FIX.C_FIXED_ASSETS_STATUS,
      CAT.CAT_DESCR,
      ACS_FUNCTION.GetAccountNumber(FAM_FUNCTIONS.GetFixedAssetFinAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),'10')) ACC_NUMBER,
      ACS_FUNCTION.GetAccountNumber(FAM_FUNCTIONS.GetFixedAssetCDAAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),'61')) CDA_NUMBER,
      ACS_FUNCTION.GetAccountNumber(FAM_FUNCTIONS.GetFixedAssetDivAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),'10')) DIV_NUMBER,
      ACS_FUNCTION.GetLocalCurrencyName LOCAL_CUR_NAME,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_11),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES1,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_12),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES2,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_13),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES3,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_14),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES4,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_15),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES5,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_16),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES6,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_17),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES7,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_18),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES8,
      FAM_FUNCTIONS.StructureElementAmount(0,TO_NUMBER(PARAMETER_6),FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),
      TO_NUMBER(PARAMETER_19),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9))  C_Immo_ES9,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_11)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES1,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_12)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES2,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_13)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES3,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_14)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES4,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_15)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES5,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_16)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES6,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_17)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES7,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_18)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES8,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_19)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES9,
      (SELECT DES.DES_DESCRIPTION_SUMMARY
         FROM ACS_DESCRIPTION DES
         WHERE DES.ACS_ACCOUNT_ID = FAM_FUNCTIONS.GetFixedAssetFinAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),'10')
           AND DES.PC_LANG_ID = vpc_lang_id) ACS_DESCRIPTION_FIN,
      (SELECT DES.DES_DESCRIPTION_SUMMARY
         FROM ACS_DESCRIPTION DES
         WHERE DES.ACS_ACCOUNT_ID = FAM_FUNCTIONS.GetFixedAssetDivAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),'10')
           AND DES.PC_LANG_ID = vpc_lang_id) ACS_DESCRIPTION_DIV,
      (SELECT DES.DES_DESCRIPTION_SUMMARY
         FROM ACS_DESCRIPTION DES
         WHERE DES.ACS_ACCOUNT_ID = FAM_FUNCTIONS.GetFixedAssetCDAAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_10),'61')
           AND DES.PC_LANG_ID = vpc_lang_id) ACS_DESCRIPTION_CDA

      FROM
      FAM_FIXED_ASSETS FIX,
      FAM_FIXED_ASSETS_CATEG CAT,
      THE (SELECT
      CAST(DOC_DOCUMENT_LIST_FUNCTIONS.IN_LIST(PARAMETER_20) AS CHAR_TABLE_TYPE)
      FROM DUAL) FAM_STATUS_LIST
      WHERE
      FIX.FAM_FIXED_ASSETS_CATEG_ID = CAT.FAM_FIXED_ASSETS_CATEG_ID
      AND ((PARAMETER_1 IS NOT NULL AND PARAMETER_2 IS NOT NULL AND FIX.FIX_NUMBER >=PARAMETER_1 AND FIX.FIX_NUMBER <=PARAMETER_2)
           OR (PARAMETER_1 IS NULL AND FIX.FIX_NUMBER <=PARAMETER_2)
           OR (PARAMETER_2 IS NULL AND FIX.FIX_NUMBER >=PARAMETER_1)
           OR (PARAMETER_1 IS NULL AND PARAMETER_2 IS  NULL ))
      AND ((PARAMETER_3 IS NOT NULL AND PARAMETER_4 IS NOT NULL AND FIX.FIX_NUMBER >=PARAMETER_3 AND FIX.FIX_NUMBER <=PARAMETER_4)
           OR (PARAMETER_3 IS NULL AND CAT.CAT_DESCR <=PARAMETER_4)
           OR (PARAMETER_4 IS NULL AND CAT.CAT_DESCR >=PARAMETER_3)
           OR (PARAMETER_3 IS NULL AND PARAMETER_4 IS  NULL ))
      AND FIX.C_FIXED_ASSETS_STATUS = FAM_STATUS_LIST.COLUMN_VALUE
       ;
END FAM_BALANCE_RPT_PK;





/*Description
  STORED PROCEDURE USED FOR REPORT FAM_JOURNAL_ACCOUNTING.RPT
*/
PROCEDURE FAM_JOURNAL_ACCOUNTING_RPT_PK(
   arefcursor     IN OUT   crystal_cursor_types.dualcursortyp
  ,parameter_0    IN       VARCHAR2
  ,PARAMETER_1    IN       VARCHAR2
  ,PARAMETER_2    IN       VARCHAR2
  ,procuser_lanid IN       pcs.pc_lang.lanid%TYPE
)

IS

vpc_lang_id   pcs.pc_lang.pc_lang_id%TYPE;              --user language id

BEGIN

pcs.PC_I_LIB_SESSION.setlanid (procuser_lanid);
vpc_lang_id := pcs.PC_I_LIB_SESSION.getuserlangid;

OPEN arefcursor FOR
SELECT
ACC.ACC_NUMBER ACC_NUMBER,
CDA.ACC_NUMBER CDA_NUMBER,
CPN.ACC_NUMBER CPN_NUMBER,
DIV.ACC_NUMBER DIV_NUMBER,
PF.ACC_NUMBER PF_NUMBER,
PJ.ACC_NUMBER PJ_NUMBER,
FUR.FIN_LOCAL_CURRENCY,
YEA.FYE_NO_EXERCICE,
FTM.C_FAM_IMPUTATION_TYP,
FTM.FIM_AMOUNT_LC_D,
FTM.FIM_AMOUNT_LC_C,
FTM.FIM_AMOUNT_FC_D,
FTM.FIM_AMOUNT_FC_C,
FDO.FAM_DOCUMENT_ID,
FDO.FDO_INT_NUMBER,
FDO.FDO_EXT_NUMBER,
FDO.FDO_DOCUMENT_DATE,
ASE.FIX_NUMBER,
ASE.FIX_SHORT_DESCR,
FIM.FIM_DESCR,
FIM.FIM_TRANSACTION_DATE,
FIM.FIM_VALUE_DATE,
FIM.FIM_EXCHANGE_RATE,
JOU.FAM_JOURNAL_ID,
JOU.C_JOURNAL_STATUS,
JOU.FJO_NUMBER,
JOU.FJO_DESCR,
JOU.A_DATECRE,
JOU.A_DATEMOD,
JOU.A_IDCRE,
CUR.CURRENCY
FROM
  ACS_ACCOUNT ACC,
  ACS_ACCOUNT CDA,
  ACS_ACCOUNT CPN,
  ACS_ACCOUNT DIV,
  ACS_ACCOUNT PF,
  ACS_ACCOUNT PJ,
  ACS_FINANCIAL_CURRENCY FUR,
  ACS_FINANCIAL_YEAR YEA,
  FAM_ACT_IMPUTATION FTM,
  FAM_DOCUMENT FDO,
  FAM_FIXED_ASSETS ASE,
  FAM_IMPUTATION FIM,
  FAM_JOURNAL JOU,
  PCS.PC_CURR CUR
WHERE
JOU.FAM_JOURNAL_ID = FDO.FAM_JOURNAL_ID
AND FDO.FAM_DOCUMENT_ID = FTM.FAM_DOCUMENT_ID(+)
AND FTM.ACS_FINANCIAL_ACCOUNT_ID = ACC.ACS_ACCOUNT_ID(+)
AND FTM.ACS_DIVISION_ACCOUNT_ID = DIV.ACS_ACCOUNT_ID(+)
AND FTM.ACS_CPN_ACCOUNT_ID = CPN.ACS_ACCOUNT_ID(+)
AND FTM.ACS_CDA_ACCOUNT_ID = CDA.ACS_ACCOUNT_ID(+)
AND FTM.ACS_PJ_ACCOUNT_ID = PJ.ACS_ACCOUNT_ID(+)
AND FTM.ACS_PF_ACCOUNT_ID = PF.ACS_ACCOUNT_ID(+)
AND JOU.ACS_FINANCIAL_YEAR_ID = YEA.ACS_FINANCIAL_YEAR_ID
AND FTM.FAM_IMPUTATION_ID = FIM.FAM_IMPUTATION_ID(+)
AND FIM.ACS_FINANCIAL_CURRENCY_ID = FUR.ACS_FINANCIAL_CURRENCY_ID
AND FUR.PC_CURR_ID = CUR.PC_CURR_ID
AND FIM.FAM_FIXED_ASSETS_ID = ASE.FAM_FIXED_ASSETS_ID(+)
AND YEA.FYE_NO_EXERCICE = TO_NUMBER(PARAMETER_0)
AND JOU.FJO_NUMBER >= TO_NUMBER(PARAMETER_1)
AND JOU.FJO_NUMBER <= TO_NUMBER(PARAMETER_2)
;

END FAM_JOURNAL_ACCOUNTING_RPT_PK;





/*Description
  STORED PROCEDURE USED FOR REPORT FAM_SUMMARY.rpt,the sub report of FAM_JOURNAL_ACCOUNTING.rpt
*/
PROCEDURE FAM_SUMMARY_SUB_RPT_PK(
   arefcursor    IN OUT   crystal_cursor_types.dualcursortyp
  ,parameter_0   IN       VARCHAR2
)
IS

BEGIN

OPEN arefcursor FOR
SELECT
ACC.ACS_ACCOUNT_ID ACC_ACCOUNT_ID,
ACC.ACC_NUMBER ACC_NUMBER,
CDA.ACS_ACCOUNT_ID CDA_ACCOUNT_ID,
CDA.ACC_NUMBER CDA_NUMBER,
CPN.ACS_ACCOUNT_ID CPN_ACCOUNT_ID,
CPN.ACC_NUMBER CPN_NUMBER,
DIV.ACS_ACCOUNT_ID DIV_ACCOUNT_ID,
DIV.ACC_NUMBER DIV_NUMBER,
PF.ACS_ACCOUNT_ID PF_ACCOUNT_ID,
PF.ACC_NUMBER PF_NUMBER,
PJ.ACS_ACCOUNT_ID PJ_ACCOUNT_ID,
PJ.ACC_NUMBER PJ_NUMBER,
FUR.FIN_LOCAL_CURRENCY,
YEA.FYE_NO_EXERCICE,
FTM.C_FAM_IMPUTATION_TYP,
FTM.FIM_AMOUNT_LC_D,
FTM.FIM_AMOUNT_LC_C,
FTM.FIM_AMOUNT_FC_D,
FTM.FIM_AMOUNT_FC_C,
FAT.FAM_CATALOGUE_ID,
FAT.FCA_DESCR,
JOU.FAM_JOURNAL_ID,
JOU.FJO_DESCR,
CUR.CURRENCY
FROM
  ACS_ACCOUNT ACC,
  ACS_ACCOUNT CDA,
  ACS_ACCOUNT CPN,
  ACS_ACCOUNT DIV,
  ACS_ACCOUNT PF,
  ACS_ACCOUNT PJ,
  ACS_FINANCIAL_CURRENCY FUR,
  ACS_FINANCIAL_YEAR YEA,
  FAM_ACT_IMPUTATION FTM,
  FAM_CATALOGUE FAT,
  FAM_DOCUMENT FDO,
  FAM_FIXED_ASSETS ASE,
  FAM_IMPUTATION FIM,
  FAM_JOURNAL JOU,
  PCS.PC_CURR CUR
WHERE
JOU.FAM_JOURNAL_ID = FDO.FAM_JOURNAL_ID
AND FDO.FAM_DOCUMENT_ID = FTM.FAM_DOCUMENT_ID(+)
AND FTM.ACS_FINANCIAL_ACCOUNT_ID = ACC.ACS_ACCOUNT_ID(+)
AND FTM.ACS_DIVISION_ACCOUNT_ID = DIV.ACS_ACCOUNT_ID(+)
AND FTM.ACS_CPN_ACCOUNT_ID = CPN.ACS_ACCOUNT_ID(+)
AND FTM.ACS_CDA_ACCOUNT_ID = CDA.ACS_ACCOUNT_ID(+)
AND FTM.ACS_PJ_ACCOUNT_ID = PJ.ACS_ACCOUNT_ID(+)
AND FTM.ACS_PF_ACCOUNT_ID = PF.ACS_ACCOUNT_ID(+)
AND JOU.ACS_FINANCIAL_YEAR_ID = YEA.ACS_FINANCIAL_YEAR_ID
AND FTM.FAM_IMPUTATION_ID = FIM.FAM_IMPUTATION_ID(+)
AND FIM.ACS_FINANCIAL_CURRENCY_ID = FUR.ACS_FINANCIAL_CURRENCY_ID
AND FUR.PC_CURR_ID = CUR.PC_CURR_ID
AND FIM.FAM_FIXED_ASSETS_ID = ASE.FAM_FIXED_ASSETS_ID(+)
AND FDO.FAM_CATALOGUE_ID = FAT.FAM_CATALOGUE_ID
AND JOU.FAM_JOURNAL_ID = TO_NUMBER(PARAMETER_0)
;
END FAM_SUMMARY_SUB_RPT_PK;






/*Description
  STORED PROCEDURE USED FOR REPORT FAM_CALC_AMORTIZATION.rpt
*/
PROCEDURE FAM_CALC_AMORTIZATION_RPT_PK(
   arefcursor     IN OUT   crystal_cursor_types.dualcursortyp
  ,parameter_0    IN       VARCHAR2
  ,procuser_lanid IN       pcs.pc_lang.lanid%TYPE
)

IS

vpc_lang_id   pcs.pc_lang.pc_lang_id%TYPE;              --user language id

BEGIN

pcs.PC_I_LIB_SESSION.setlanid (procuser_lanid);
vpc_lang_id := pcs.PC_I_LIB_SESSION.getuserlangid;


OPEN arefcursor FOR
SELECT
YEA.FYE_NO_EXERCICE,
PER.PER_NO_PERIOD,
AMO.ACS_PERIOD_ID,
CAL.CAL_TRANSACTION_DATE,
CAL.CAL_VALUE_DATE,
CAL.CAL_AMORTIZATION_BASE_LC,
CAL.CAL_AMORTIZATION_RATE,
CAL.CAL_AMORTIZATION_LC,
CAL.CAL_DAYS,
CAL.FAM_IMPUTATION_ID,
AST.FAM_FIXED_ASSETS_ID,
AST.FIX_NUMBER,
AST.FIX_SHORT_DESCR,
CAG.FAM_FIXED_ASSETS_CATEG_ID,
CAG.CAT_DESCR,
VAL.FAM_MANAGED_VALUE_ID,
VAL.VAL_KEY,
VAL.VAL_DESCR
FROM
ACS_FINANCIAL_YEAR YEA,
ACS_PERIOD PER,
FAM_AMORTIZATION_PERIOD AMO,
FAM_CALC_AMORTIZATION CAL,
FAM_FIXED_ASSETS AST,
FAM_FIXED_ASSETS_CATEG CAG,
FAM_MANAGED_VALUE VAL,
FAM_PER_CALC_BY_VALUE BYV
WHERE
AMO.ACS_PERIOD_ID = BYV.ACS_PERIOD_ID
AND BYV.FAM_PER_CALC_BY_VALUE_ID = CAL.FAM_PER_CALC_BY_VALUE_ID
AND CAL.FAM_FIXED_ASSETS_ID = AST.FAM_FIXED_ASSETS_ID
AND AST.FAM_FIXED_ASSETS_CATEG_ID = CAG.FAM_FIXED_ASSETS_CATEG_ID
AND BYV.ACS_PERIOD_ID = PER.ACS_PERIOD_ID
AND PER.ACS_FINANCIAL_YEAR_ID = YEA.ACS_FINANCIAL_YEAR_ID
AND BYV.FAM_MANAGED_VALUE_ID = VAL.FAM_MANAGED_VALUE_ID
AND AMO.ACS_PERIOD_ID = TO_NUMBER(parameter_0)
AND CAL.CAL_AMORTIZATION_BASE_LC IS NOT NULL
;
END FAM_CALC_AMORTIZATION_RPT_PK;





/**
*Description
 Used for report FAM_BALANCE.RPT
*@created JLIU 1.12.2009
*@lastUpdate 1.12.2008
*/
PROCEDURE FAM_VALUE_EVOL_RPT_PK(
    arefcursor       IN OUT   crystal_cursor_types.dualcursortyp
   ,procuser_lanid   IN       pcs.pc_lang.lanid%TYPE
   ,PARAMETER_1      IN       VARCHAR2
   ,PARAMETER_2      IN       VARCHAR2
   ,PARAMETER_3      IN       VARCHAR2
   ,PARAMETER_4      IN       VARCHAR2
   ,PARAMETER_6      IN       VARCHAR2
   ,PARAMETER_7      IN       VARCHAR2
   ,PARAMETER_8      IN       VARCHAR2
   ,PARAMETER_9      IN       VARCHAR2
   ,PARAMETER_10     IN       VARCHAR2
   ,PARAMETER_12     IN       VARCHAR2
   ,PARAMETER_13     IN       VARCHAR2
   ,PARAMETER_14     IN       VARCHAR2
   ,PARAMETER_15     IN       VARCHAR2
   ,PARAMETER_16     IN       VARCHAR2
   ,PARAMETER_17     IN       VARCHAR2
   ,PARAMETER_18     IN       VARCHAR2
   ,PARAMETER_19     IN       VARCHAR2
   ,PARAMETER_20     IN       VARCHAR2
   ,PARAMETER_21     IN       VARCHAR2
   ,PARAMETER_22     IN       VARCHAR2
   ,PARAMETER_23     IN       VARCHAR2
   ,PARAMETER_24     IN       VARCHAR2
   ,PARAMETER_25     IN       VARCHAR2
   ,PARAMETER_26     IN       VARCHAR2
   ,PARAMETER_27     IN       VARCHAR2
   ,PARAMETER_28     IN       VARCHAR2
   ,PARAMETER_29     IN       VARCHAR2
)
IS


vpc_lang_id   pcs.pc_lang.pc_lang_id%TYPE;              --user language id



BEGIN
   pcs.PC_I_LIB_SESSION.setlanid (procuser_lanid);
   vpc_lang_id := pcs.PC_I_LIB_SESSION.getuserlangid;

   OPEN arefcursor FOR
   SELECT
      FIX.FAM_FIXED_ASSETS_ID,
      FIX.FIX_NUMBER,
      FIX.FIX_SHORT_DESCR,
      FIX.C_FIXED_ASSETS_STATUS,
      CAT.CAT_DESCR,
      ACS_FUNCTION.GetAccountNumber(FAM_FUNCTIONS.GetFixedAssetFinAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),'10')) ACC_NUMBER,
      ACS_FUNCTION.GetAccountNumber(FAM_FUNCTIONS.GetFixedAssetCDAAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),'61')) CDA_NUMBER,
      ACS_FUNCTION.GetAccountNumber(FAM_FUNCTIONS.GetFixedAssetDivAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),'10')) DIV_NUMBER,
      ACS_FUNCTION.GetLocalCurrencyName LOCAL_CUR_NAME,
      FAM_FUNCTIONS.StructureElementAmount(0,2,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_12),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_D1,
      FAM_FUNCTIONS.StructureElementAmount(0,2,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_13),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_D2,
      FAM_FUNCTIONS.StructureElementAmount(0,2,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_14),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_D3,
      FAM_FUNCTIONS.StructureElementAmount(0,2,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_15),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_D4,
      FAM_FUNCTIONS.StructureElementAmount(0,2,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_16),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_D5,
      FAM_FUNCTIONS.StructureElementAmount(0,2,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_17),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_D6,
      FAM_FUNCTIONS.StructureElementAmount(0,0,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_18),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_E1,
      FAM_FUNCTIONS.StructureElementAmount(0,0,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_19),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_E2,
      FAM_FUNCTIONS.StructureElementAmount(0,0,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_20),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_E3,
      FAM_FUNCTIONS.StructureElementAmount(0,0,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_21),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_E4,
      FAM_FUNCTIONS.StructureElementAmount(0,0,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_22),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_E5,
      FAM_FUNCTIONS.StructureElementAmount(0,0,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_23),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_E6,
      FAM_FUNCTIONS.StructureElementAmount(0,1,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_24),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_F1,
      FAM_FUNCTIONS.StructureElementAmount(0,1,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_25),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_F2,
      FAM_FUNCTIONS.StructureElementAmount(0,1,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_26),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_F3,
      FAM_FUNCTIONS.StructureElementAmount(0,1,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_27),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_F4,
      FAM_FUNCTIONS.StructureElementAmount(0,1,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_28),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_F5,
      FAM_FUNCTIONS.StructureElementAmount(0,1,FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),
       TO_NUMBER(PARAMETER_29),TO_NUMBER(PARAMETER_7),TO_NUMBER(PARAMETER_8),TO_NUMBER(PARAMETER_9)) C_Immo_ES_F6,
     (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_12)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_D1,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_13)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_D2,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_14)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_D3,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_15)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_D4,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_16)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_D5,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_17)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_D6,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_18)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_E1,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_19)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_E2,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_20)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_E3,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_21)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_E4,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_22)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_E5,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_23)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_E6,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_24)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_F1,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_25)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_F2,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_26)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_F3,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_27)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_F4,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_28)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_F5,
      (SELECT DECODE(TRA.TRA_DESCRIPTION,NULL,STR.ELE_DESCRIPTION,TRA.TRA_DESCRIPTION)
         FROM FAM_STRUCTURE_ELEMENT STR, FAM_TRADUCTION TRA
         WHERE STR.FAM_STRUCTURE_ELEMENT_ID = TO_NUMBER(PARAMETER_29)
               AND STR.FAM_STRUCTURE_ELEMENT_ID = TRA.FAM_STRUCTURE_ELEMENT_ID(+)
               AND (TRA.PC_LANG_ID = vpc_lang_id OR  TRA.PC_LANG_ID IS NULL)) DESCR_ES_F6,
      (SELECT DES.DES_DESCRIPTION_SUMMARY
         FROM ACS_DESCRIPTION DES
         WHERE DES.ACS_ACCOUNT_ID = FAM_FUNCTIONS.GetFixedAssetFinAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),'10')
           AND DES.PC_LANG_ID = vpc_lang_id) ACS_DESCRIPTION_FIN,
      (SELECT DES.DES_DESCRIPTION_SUMMARY
         FROM ACS_DESCRIPTION DES
         WHERE DES.ACS_ACCOUNT_ID = FAM_FUNCTIONS.GetFixedAssetDivAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),'10')
           AND DES.PC_LANG_ID = vpc_lang_id) ACS_DESCRIPTION_DIV,
      (SELECT DES.DES_DESCRIPTION_SUMMARY
         FROM ACS_DESCRIPTION DES
         WHERE DES.ACS_ACCOUNT_ID = FAM_FUNCTIONS.GetFixedAssetCDAAccId(FIX.FAM_FIXED_ASSETS_ID,TO_NUMBER(PARAMETER_6),'61')
           AND DES.PC_LANG_ID = vpc_lang_id) ACS_DESCRIPTION_CDA
   FROM
      FAM_FIXED_ASSETS FIX,
      FAM_FIXED_ASSETS_CATEG CAT,
      THE (SELECT
      CAST(DOC_DOCUMENT_LIST_FUNCTIONS.IN_LIST(PARAMETER_10) AS CHAR_TABLE_TYPE)
      FROM DUAL) FAM_STATUS_LIST
   WHERE
      FIX.FAM_FIXED_ASSETS_CATEG_ID = CAT.FAM_FIXED_ASSETS_CATEG_ID
      AND ((PARAMETER_1 IS NOT NULL AND PARAMETER_2 IS NOT NULL AND FIX.FIX_NUMBER >=PARAMETER_1 AND FIX.FIX_NUMBER <=PARAMETER_2)
           OR (PARAMETER_1 IS NULL AND FIX.FIX_NUMBER <=PARAMETER_2)
           OR (PARAMETER_2 IS NULL AND FIX.FIX_NUMBER >=PARAMETER_1)
           OR (PARAMETER_1 IS NULL AND PARAMETER_2 IS  NULL ))
      AND ((PARAMETER_3 IS NOT NULL AND PARAMETER_4 IS NOT NULL AND FIX.FIX_NUMBER >=PARAMETER_3 AND FIX.FIX_NUMBER <=PARAMETER_4)
           OR (PARAMETER_3 IS NULL AND CAT.CAT_DESCR <=PARAMETER_4)
           OR (PARAMETER_4 IS NULL AND CAT.CAT_DESCR >=PARAMETER_3)
           OR (PARAMETER_3 IS NULL AND PARAMETER_4 IS  NULL ))
      AND FIX.C_FIXED_ASSETS_STATUS = FAM_STATUS_LIST.COLUMN_VALUE
       ;
END FAM_VALUE_EVOL_RPT_PK;
END FAM_RPT;
