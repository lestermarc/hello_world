--------------------------------------------------------
--  DDL for Package Body PAC_RPT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "PAC_RPT" 
IS

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
*/
PROCEDURE PAC_CUSTOM_FORM_RPT_PK (
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_0      IN       VARCHAR2,
      parameter_1      IN       VARCHAR2,
      parameter_3      IN       VARCHAR2,
      parameter_4      IN       VARCHAR2,
      parameter_5      IN       VARCHAR2,
      parameter_6      IN       VARCHAR2
)
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
      PARAM_A_DATECRE_START     DATE;
      PARAM_A_DATECRE_END       DATE;
      PARAM_A_IDCRE             VARCHAR2(5);
      PARAM_A_DATEMOD_START     DATE;
      PARAM_A_DATEMOD_END       DATE;
      PARAM_A_IDMOD             VARCHAR2(5);

BEGIN
      CASE PARAMETER_3
      WHEN '0'
      THEN
         NULL;

      WHEN '1'
      THEN
         IF
            PARAMETER_4 = '0'
         THEN
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDCRE := PARAMETER_6;
            END IF;
         ELSE
            PARAM_A_DATECRE_START := PARAMETER_4;
            PARAM_A_DATECRE_END   := PARAMETER_5;
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDCRE := PARAMETER_6;
            END IF;
         END IF;

      WHEN '2'
      THEN
         IF
            PARAMETER_4 = '0'
         THEN
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDMOD := PARAMETER_6;
            END IF;
         ELSE
            PARAM_A_DATEMOD_START := PARAMETER_4;
            PARAM_A_DATEMOD_END   := PARAMETER_5;
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDMOD := PARAMETER_6;
            END IF;
         END IF;

      ELSE
         null;

      END CASE;

PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
PER.PAC_PERSON_ID,
PER.PER_KEY1,
PER.PER_KEY2,
PER.DIC_PERSON_POLITNESS_ID,
PER.PER_NAME,
PER.PER_FORENAME,
PER.PER_SHORT_NAME,
PER.PER_ACTIVITY,
PER.PER_COMMENT,
PER.DIC_FREE_CODE1_ID,
PER.DIC_FREE_CODE2_ID,
PER.DIC_FREE_CODE3_ID,
PER.DIC_FREE_CODE4_ID,
PER.DIC_FREE_CODE5_ID,
PER.DIC_FREE_CODE6_ID,
PER.DIC_FREE_CODE7_ID,
PER.DIC_FREE_CODE8_ID,
PER.DIC_FREE_CODE9_ID,
PER.DIC_FREE_CODE10_ID,
CUS.PAC_CUSTOM_PARTNER_ID,
CUS.C_PARTNER_CATEGORY,
ACC1.ACC_NUMBER,
CUS.PAC_PAYMENT_CONDITION_ID,
CUS.C_PARTNER_STATUS,
CUS.C_STATUS_SETTLEMENT,
CUS.DIC_TYPE_SUBMISSION_ID,
THI.THI_NO_TVA,
THI.THI_NO_INTRA,
CUS.C_REMAINDER_LAUNCHING,
CUS.CUS_WITHOUT_REMIND_DATE,
CUS.PAC_REMAINDER_CATEGORY_ID,
CUS.DIC_TYPE_PARTNER_ID,
CUS.CUS_FREE_ZONE1,
CUS.CUS_FREE_ZONE2,
CUS.CUS_FREE_ZONE3,
CUS.CUS_FREE_ZONE4,
CUS.CUS_FREE_ZONE5,
CUS.DIC_STATISTIC_1_ID,
CUS.DIC_STATISTIC_2_ID,
CUS.DIC_STATISTIC_3_ID,
CUS.DIC_STATISTIC_4_ID,
CUS.DIC_STATISTIC_5_ID,
PE1.PER_NAME PER_NAME_1,
PE1.PER_FORENAME PER_FORENAME_1,
PE2.PER_NAME PER_NAME_2,
PE2.PER_FORENAME PER_FORENAME_2,
CUS.PAC_REPRESENTATIVE_ID,
CUS.DIC_PTC_THIRD_GROUP_ID,
CUS.DIC_TARIFF_ID,
CUS.PAC_SENDING_CONDITION_ID,
CUS.CUS_RATE_FOR_VALUE,
CUS.PAC_CALENDAR_TYPE_ID,
CUS.DIC_COMPLEMENTARY_DATA_ID,
CUS.DIC_PIC_GROUP_ID,
CUS.C_INCOTERMS,
CUS.CUS_INCOTERMS_PLACE,
CUS.C_RESERVATION_TYP,
CUS.CUS_DELIVERY_DELAY,
CUS.CUS_PERIODIC_DELIVERY,
CUS.C_DELIVERY_TYP,
CUS.DIC_DELIVERY_PERIOD_ID,
CUS.C_DOC_CREATION,
CUS.CUS_PERIODIC_INVOICING,
CUS.DIC_INVOICING_PERIOD_ID,
CUS.C_DOC_CREATION_INVOICE,
CUS.CUS_MIN_INVOICING,
CUS.CUS_MIN_INVOICING_DELAY,
CUS.C_BVR_GENERATION_METHOD,
CUS.C_TYPE_EDI,
CUS.CUS_DATA_EXPORT,
CUS.CUS_SUPPLIER_NUMBER,
CUS.CUS_EAN_NUMBER,
CUS.DOC_GAUGE_ID,
CUS.DOC_DOC_GAUGE_ID,
CUS.CUS_SUP_COPY1,
CUS.CUS_SUP_COPY2,
CUS.CUS_SUP_COPY3,
CUS.CUS_SUP_COPY4,
CUS.CUS_SUP_COPY5,
CUS.CUS_SUP_COPY6,
CUS.CUS_SUP_COPY7,
CUS.CUS_SUP_COPY8,
CUS.CUS_SUP_COPY9,
CUS.CUS_SUP_COPY10,
THI.DIC_THIRD_ACTIVITY_ID,
THI.DIC_THIRD_AREA_ID,
THI.DIC_JURIDICAL_STATUS_ID,
THI.DIC_CITI_CODE_ID,
THI.THI_NO_SIREN,
THI.THI_NO_SIRET,
THI.PAC_PAC_PERSON_ID,
CUS.PC_APPLTXT_ID,
CUS.PC__PC_APPLTXT_ID,
CUS.PC_2_PC_APPLTXT_ID,
CUS.PC_3_PC_APPLTXT_ID,
CUS.PC_4_PC_APPLTXT_ID,
CUS.CUS_LAPSING_MARGE,
AUX.ACS_AUXILIARY_ACCOUNT_ID,
AUX.ACS_PREP_COLL_ID,
AUX.ACS_INVOICE_COLL_ID,
AUX.ACS_FINANCIAL_ACCOUNT_ID,
ACC2.ACC_DETAIL_PRINTING,
ACC2.ACC_BLOCKED,
ACC2.ACC_VALID_SINCE,
ACC2.ACC_VALID_TO,
DES.DES_DESCRIPTION_SUMMARY,
PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(CUS.PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_1_description,
PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(CUS.PC__PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_2_description,
PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(CUS.PC_2_PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_3_description,
PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(CUS.PC_3_PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_4_description,
PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(CUS.PC_4_PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_5_description,
(SELECT
 ADE1.DES_DESCRIPTION_SUMMARY
 FROM
 ACS_DESCRIPTION ADE1
 WHERE
 ADE1.ACS_SUB_SET_ID = ACC1.ACS_SUB_SET_ID AND
 ADE1.PC_LANG_ID = VPC_LANG_ID
) ACS_SUB_SE,
(SELECT
 ADE2.DES_DESCRIPTION_SUMMARY
 FROM
 ACS_DESCRIPTION ADE2
 WHERE
 ADE2.ACS_PAYMENT_METHOD_ID = PAY.ACS_PAYMENT_METHOD_ID AND
 ADE2.PC_LANG_ID = VPC_LANG_ID
) ACS_PAYMENT_MET,
(SELECT
 ADE3.DES_DESCRIPTION_SUMMARY
 FROM
 ACS_DESCRIPTION ADE3
 WHERE
 ADE3.ACS_VAT_DET_ACCOUNT_ID = CUS.ACS_VAT_DET_ACCOUNT_ID AND
 ADE3.PC_LANG_ID = VPC_LANG_ID
) ACS_VAT_DET_ACC,
(SELECT
 ADE4.DES_DESCRIPTION_SUMMARY
 FROM
 ACS_DESCRIPTION ADE4
 WHERE
 ADE4.ACS_ACCOUNTING_ID = AUX.ACS_INVOICE_COLL_ID AND
 ADE4.PC_LANG_ID = VPC_LANG_ID
) ACS_INVOICE_COL,
(SELECT
 ADE5.DES_DESCRIPTION_SUMMARY
 FROM
 ACS_DESCRIPTION ADE5
 WHERE
 ADE5.ACS_ACCOUNT_ID = AUX.ACS_PREP_COLL_ID AND
 ADE5.PC_LANG_ID = VPC_LANG_ID
) ACS_PREP_COL,
(SELECT
 ADE6.DES_DESCRIPTION_SUMMARY
 FROM
 ACS_DESCRIPTION ADE6
 WHERE
 ADE6.ACS_ACCOUNT_ID = AUX.ACS_FINANCIAL_ACCOUNT_ID AND
 ADE6.PC_LANG_ID = VPC_LANG_ID
) ACS_FINANCIAL_ACC,
CUS.CUS_NO_REM_CHARGE,
CUS.CUS_NO_MORATORIUM_INTEREST,
CUS.CUS_TARIFF_BY_SET,
THI.THI_CUSTOM_NUMBER

FROM
    PAC_PERSON PE2,
    PAC_PERSON PE1,
    PAC_THIRD THI,
    ACS_FIN_ACC_S_PAYMENT PAY,
    ACS_ACCOUNT ACC1,
    PAC_PERSON PER,
    PAC_CUSTOM_PARTNER CUS,
    ACS_DESCRIPTION DES,
    ACS_ACCOUNT ACC2,
    ACS_AUXILIARY_ACCOUNT AUX,
    ACS_SUB_SET SUB
WHERE
    PER.PAC_PERSON_ID = CUS.PAC_CUSTOM_PARTNER_ID
AND CUS.ACS_AUXILIARY_ACCOUNT_ID = ACC1.ACS_ACCOUNT_ID(+)
AND CUS.ACS_FIN_ACC_S_PAYMENT_ID = PAY.ACS_FIN_ACC_S_PAYMENT_ID(+)
AND CUS.PAC_CUSTOM_PARTNER_ID = THI.PAC_THIRD_ID
AND CUS.PAC_PAC_THIRD_1_ID = PE1.PAC_PERSON_ID(+)
AND CUS.PAC_PAC_THIRD_2_ID = PE2.PAC_PERSON_ID(+)
AND CUS.ACS_AUXILIARY_ACCOUNT_ID = AUX.ACS_AUXILIARY_ACCOUNT_ID (+)
AND AUX.ACS_AUXILIARY_ACCOUNT_ID = ACC2.ACS_ACCOUNT_ID
AND ACC2.ACS_ACCOUNT_ID = DES.ACS_ACCOUNT_ID
AND ACC2.ACS_SUB_SET_ID = SUB.ACS_SUB_SET_ID
AND SUB.C_TYPE_SUB_SET = 'AUX'
AND (
     (PER.PER_NAME >= PARAMETER_0 AND PER.PER_NAME <= PARAMETER_1 )
     OR
     (PARAMETER_0 IS NULL AND PARAMETER_1 IS NULL)
    )
AND ((CUS.A_DATECRE >= PARAM_A_DATECRE_START AND CUS.A_DATECRE <= PARAM_A_DATECRE_END) OR PARAM_A_DATECRE_START IS NULL)
AND (CUS.A_IDCRE = PARAM_A_IDCRE
     OR (PARAM_A_IDCRE IS NULL
         AND (PARAMETER_4<>0 OR PARAMETER_3 <> '1')
        )
    )
AND ((CUS.A_DATEMOD >= PARAM_A_DATEMOD_START AND CUS.A_DATEMOD <= PARAM_A_DATEMOD_END) OR PARAM_A_DATEMOD_START IS NULL)
AND (CUS.A_IDMOD = PARAM_A_IDMOD
     OR (PARAM_A_IDMOD IS NULL
         AND (PARAMETER_4<>0 OR PARAMETER_3 <> '2')
        )
    )
AND DES.PC_LANG_ID = VPC_LANG_ID
;
END PAC_CUSTOM_FORM_RPT_PK;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT,PAC_SUPPLIER_FORM_BATCH
 @CREATED AWU Dec.2008
 PARAMETER_0  PAC_PERSON_ID
*/
PROCEDURE PAC_COMMUNICATION_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    PAD.DIC_ADDRESS_TYPE_ID
,   COM.DIC_COMMUNICATION_TYPE_ID
,   COM.COM_EXT_NUMBER
,   COM.COM_AREA_CODE
,   COM.COM_INT_NUMBER
FROM
    PAC_ADDRESS PAD
,   PAC_COMMUNICATION COM
WHERE
    COM.PAC_ADDRESS_ID = PAD.PAC_ADDRESS_ID (+)
AND COM.PAC_PERSON_ID = PARAMETER_99;
END PAC_COMMUNICATION_SUB_RPT_PK;


/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 PAC_CUSTOM_PARTNER_ID
*/
PROCEDURE PAC_DISCOUNT_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99      IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    DNT.DNT_NAME
FROM
    PTC_DISCOUNT DNT
,   PTC_DISCOUNT_S_THIRD DTH
WHERE
    DNT.PTC_DISCOUNT_ID = DTH.PTC_DISCOUNT_ID
AND DTH.PAC_THIRD_ID = PARAMETER_99
;
END PAC_DISCOUNT_SUB_RPT_PK
;


/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 PAC_CUSTOM_PARTNER_ID
*/
PROCEDURE PTC_CHARGE_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    CRG.CRG_NAME
FROM
    PTC_CHARGE CRG
,   PTC_CHARGE_S_PARTNERS CPA
WHERE
    CRG.PTC_CHARGE_ID = CPA.PTC_CHARGE_ID
AND CPA.PAC_THIRD_ID = PARAMETER_99
;
END PTC_CHARGE_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 PAC_CUSTOM_PARTNER_ID
*/
PROCEDURE PTC_WEB_ACCESS_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    THI.THI_WEB_KEY
,   WEB.WEB_USER
,   WEB.WEB_PASSWORD
,   WEB.WEB_PASSWORD_MODIFICATION
,   WEB.WEB_DAYS_VALIDITY
,   WEB.WEB_ACCESS_LEVEL
,   WEB.WEB_START_DATE
,   WEB.WEB_END_DATE
,   WEB.WEB_LAST_ACCESS
,   WEB.WEB_LAST_PW_MODIFICATION
,   WEB.PC_LANG_ID
FROM
    PAC_THIRD THI
,   PAC_WEB_ACCESS WEB
WHERE
    THI.PAC_THIRD_ID = WEB.PAC_THIRD_ID
AND THI.PAC_THIRD_ID = PARAMETER_99
;
END PTC_WEB_ACCESS_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 PAC_CUSTOM_PARTNER_ID
*/
PROCEDURE PAC_CONTACT_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    COM.DIC_COMMUNICATION_TYPE_ID
,   COM.COM_EXT_NUMBER
,   COM.COM_INT_NUMBER
,   COM.COM_AREA_CODE
,   PER.PER_NAME
,   ASS.PAC_PERSON_ASSOCIATION_ID
,   ASS.DIC_ASSOCIATION_TYPE_ID
,   ASS.PAS_FUNCTION
FROM
    PAC_COMMUNICATION COM
,   PAC_PERSON PER
,   PAC_PERSON_ASSOCIATION ASS
WHERE
    ASS.PAC_PAC_PERSON_ID = COM.PAC_PERSON_ID
AND ASS.PAC_PAC_PERSON_ID = PER.PAC_PERSON_ID
AND ASS.PAC_PERSON_ID = PARAMETER_99
;
END PAC_CONTACT_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 ACS_UXILIARY_ACCOUNT_ID
*/
PROCEDURE ACS_AUX_CUR_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    AAC.ACS_AUXILIARY_ACCOUNT_ID
,   AAC.ASC_DEFAULT
,   PCU.CURRENCY
,   PCU.CURRNAME
FROM
    ACS_AUX_ACCOUNT_S_FIN_CURR AAC
,   ACS_FINANCIAL_CURRENCY FCR
,   PCS.PC_CURR PCU
WHERE
    AAC.ACS_FINANCIAL_CURRENCY_ID = FCR.ACS_FINANCIAL_CURRENCY_ID
AND FCR.PC_CURR_ID = PCU.PC_CURR_ID
AND AAC.ACS_AUXILIARY_ACCOUNT_ID = PARAMETER_99
;
END ACS_AUX_CUR_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 PAC_CUSTOM_PARTNER_ID
*/
PROCEDURE PAC_CREDIT_LIMIT_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    CRL.C_VALID
,   CRL.C_LIMIT_TYPE
,   CRL.PC_USER_ID
,   CRL.CRE_AMOUNT_LIMIT
,   CRL.CRE_COMMENT
,   CRL.CRE_LIMIT_DATE
,   ACS_FUNCTION.GETCURRENCYNAME(CRL.ACS_FINANCIAL_CURRENCY_ID) MONNAIE
FROM
    PAC_CREDIT_LIMIT CRL
WHERE
    CRL.PAC_CUSTOM_PARTNER_ID = PARAMETER_99
;
END PAC_CREDIT_LIMIT_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_CUSTOM_FORM.RPT
 @CREATED AWU Dec.2008
 PARAMETER_0 PAC_CUSTOM_PARTNER_ID
*/
PROCEDURE PAC_PREC_MATERIAL_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_99     IN       NUMBER
   )
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
BEGIN

PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
    CUS.C_MATERIAL_MGNT_MODE
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_MATERIAL_MGNT_MODE',CUS.C_MATERIAL_MGNT_MODE,VPC_LANG_ID) MGNT_MODE
,   THI.GCO_ALLOY_ID
,   GAL.GAL_ALLOY_REF
,   GAL.GAL_ALLOY_DESCR
,   THI.DIC_BASIS_MATERIAL_ID
,   (SELECT
    DIT.DIT_DESCR
    FROM
    DICO_DESCRIPTION DIT
    WHERE
    DIT.DIT_TABLE = 'DIC_BASIS_MATERIAL' AND
    DIT.DIT_CODE = THI.DIC_BASIS_MATERIAL_ID AND
    DIT.PC_LANG_ID = VPC_LANG_ID
    ) DIT_DESCR
,   THI.THA_MANAGED
,   THI.THA_NUMBER
,   CUS.C_THIRD_MATERIAL_RELATION_TYPE
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_THIRD_MATERIAL_RELATION_TYPE',CUS.C_THIRD_MATERIAL_RELATION_TYPE,VPC_LANG_ID) THIRD_MATERIAL_RELATION_TYPE
,   CUS.C_WEIGHING_MGNT
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_WEIGHING_MGNT',CUS.C_WEIGHING_MGNT,VPC_LANG_ID) WEIGHING_MGNT
,   CUS.C_ADV_MATERIAL_MODE
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_ADV_MATERIAL_MODE',CUS.C_ADV_MATERIAL_MODE,VPC_LANG_ID) ADV_MATERIAL_MODE
FROM
    PAC_CUSTOM_PARTNER CUS
,   PAC_THIRD_ALLOY THI
,   GCO_ALLOY GAL
WHERE
    CUS.PAC_CUSTOM_PARTNER_ID = THI.PAC_CUSTOM_PARTNER_ID (+)
AND THI.GCO_ALLOY_ID = GAL.GCO_ALLOY_ID (+)
AND CUS.PAC_CUSTOM_PARTNER_ID = PARAMETER_99
;
END PAC_PREC_MATERIAL_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_SUPPLIER_FORM.RPT
 @CREATED AWU Dec.2008
*/
PROCEDURE PAC_SUPPLIER_FORM_RPT_PK (
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_0      IN       VARCHAR2,
      parameter_1      IN       VARCHAR2,
      parameter_3      IN       VARCHAR2,
      parameter_4      IN       VARCHAR2,
      parameter_5      IN       VARCHAR2,
      parameter_6      IN       VARCHAR2
)
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
      PARAM_A_DATECRE_START     DATE;
      PARAM_A_DATECRE_END       DATE;
      PARAM_A_IDCRE             VARCHAR2(5);
      PARAM_A_DATEMOD_START     DATE;
      PARAM_A_DATEMOD_END       DATE;
      PARAM_A_IDMOD             VARCHAR2(5);

BEGIN
      CASE PARAMETER_3
      WHEN '0'
      THEN
         NULL;

      WHEN '1'
      THEN
         IF
            PARAMETER_4 = '0'
         THEN
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDCRE := PARAMETER_6;
            END IF;
         ELSE
            PARAM_A_DATECRE_START := PARAMETER_4;
            PARAM_A_DATECRE_END   := PARAMETER_5;
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDCRE := PARAMETER_6;
            END IF;
         END IF;

      WHEN '2'
      THEN
         IF
            PARAMETER_4 = '0'
         THEN
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDMOD := PARAMETER_6;
            END IF;
         ELSE
            PARAM_A_DATEMOD_START := PARAMETER_4;
            PARAM_A_DATEMOD_END   := PARAMETER_5;
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDMOD := PARAMETER_6;
            END IF;
         END IF;

      ELSE
         null;

      END CASE;

PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
    PER.PAC_PERSON_ID
,   PER.PER_KEY1
,   PER.PER_KEY2
,   PER.DIC_PERSON_POLITNESS_ID
,   PER.PER_NAME
,   PER.PER_FORENAME
,   PER.PER_SHORT_NAME
,   PER.PER_ACTIVITY
,   PER.PER_COMMENT
,   PER.DIC_FREE_CODE1_ID
,   PER.DIC_FREE_CODE2_ID
,   PER.DIC_FREE_CODE3_ID
,   PER.DIC_FREE_CODE4_ID
,   PER.DIC_FREE_CODE5_ID
,   PER.DIC_FREE_CODE6_ID
,   PER.DIC_FREE_CODE7_ID
,   PER.DIC_FREE_CODE8_ID
,   PER.DIC_FREE_CODE9_ID
,   PER.DIC_FREE_CODE10_ID
,   SUP.PAC_SUPPLIER_PARTNER_ID
,   SUP.C_PARTNER_CATEGORY
,   ACC2.ACC_NUMBER
,   SUP.PAC_PAYMENT_CONDITION_ID
,   SUP.C_PARTNER_STATUS
,   SUP.C_STATUS_SETTLEMENT
,   SUP.DIC_TYPE_SUBMISSION_ID
,   THI.THI_NO_TVA
,   THI.THI_NO_INTRA
,   SUP.C_REMAINDER_LAUNCHING
,   SUP.CRE_WITHOUT_REMIND_DATE
,   SUP.PAC_REMAINDER_CATEGORY_ID
,   SUP.DIC_TYPE_PARTNER_F_ID
,   SUP.CRE_FREE_ZONE1
,   SUP.CRE_FREE_ZONE2
,   SUP.CRE_FREE_ZONE3
,   SUP.CRE_FREE_ZONE4
,   SUP.CRE_FREE_ZONE5
,   SUP.DIC_STATISTIC_F1_ID
,   SUP.DIC_STATISTIC_F2_ID
,   SUP.DIC_STATISTIC_F3_ID
,   SUP.DIC_STATISTIC_F4_ID
,   SUP.DIC_STATISTIC_F5_ID
,   PE1.PER_NAME PER_NAME_1
,   PE1.PER_FORENAME PER_FORENAME_1
,   PE2.PER_NAME PER_NAME_2
,   PE2.PER_FORENAME PER_FORENAME_2
,   SUP.DIC_PTC_THIRD_GROUP_ID
,   SUP.DIC_TARIFF_ID
,   SUP.PAC_SENDING_CONDITION_ID
,   SUP.PAC_CALENDAR_TYPE_ID
,   SUP.DIC_COMPLEMENTARY_DATA_ID
,   SUP.DIC_PIC_GROUP_ID
,   SUP.C_INCOTERMS
,   SUP.CRE_INCOTERMS_PLACE
,   SUP.CRE_SUPPLY_DELAY
,   SUP.CRE_MANUFACTURER
,   SUP.C_DELIVERY_TYP
,   SUP.C_TYPE_EDI
,   SUP.CRE_DATA_EXPORT
,   SUP.CRE_CUSTOMER_NUMBER
,   SUP.CRE_EAN_NUMBER
,   SUP.CRE_SUP_COPY1
,   SUP.CRE_SUP_COPY2
,   SUP.CRE_SUP_COPY3
,   SUP.CRE_SUP_COPY4
,   SUP.CRE_SUP_COPY5
,   SUP.CRE_SUP_COPY6
,   SUP.CRE_SUP_COPY7
,   SUP.CRE_SUP_COPY8
,   SUP.CRE_SUP_COPY9
,   SUP.CRE_SUP_COPY10
,   THI.DIC_THIRD_ACTIVITY_ID
,   THI.DIC_THIRD_AREA_ID
,   THI.DIC_JURIDICAL_STATUS_ID
,   THI.DIC_CITI_CODE_ID
,   THI.THI_NO_SIREN
,   THI.THI_NO_SIRET
,   THI.PAC_PAC_PERSON_ID
,   SUP.DIC_PRIORITY_PAYMENT_ID
,   SUP.DIC_CENTER_PAYMENT_ID
,   SUP.DIC_LEVEL_PRIORITY_ID
,   SUP.CRE_BLOCKED
,   SUP.PC_APPLTXT_ID
,   SUP.PC__PC_APPLTXT_ID
,   SUP.PC_2_PC_APPLTXT_ID
,   SUP.PC_3_PC_APPLTXT_ID
,   SUP.PC_4_PC_APPLTXT_ID
,   SUP.CRE_DAY_CAPACITY
,   AUX.ACS_AUXILIARY_ACCOUNT_ID
,   AUX.ACS_PREP_COLL_ID
,   AUX.ACS_INVOICE_COLL_ID
,   AUX.ACS_FINANCIAL_ACCOUNT_ID
,   ACC2.ACC_DETAIL_PRINTING
,   ACC2.ACC_BLOCKED
,   ACC2.ACC_INTEREST
,   ACC2.ACC_VALID_SINCE
,   ACC2.ACC_VALID_TO
,   DES.DES_DESCRIPTION_SUMMARY
,   PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(SUP.PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_1_description
,   PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(SUP.PC__PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_2_description
,   PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(SUP.PC_2_PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_3_description
,   PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(SUP.PC_3_PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_4_description
,   PCS.PC_FUNCTIONS.GETAPPLTXTLABEL(SUP.PC_4_PC_APPLTXT_ID,VPC_LANG_ID) C_Texte_pied_5_description
,   (SELECT
     ADE1.DES_DESCRIPTION_SUMMARY
     FROM
     ACS_DESCRIPTION ADE1
     WHERE
     ADE1.ACS_SUB_SET_ID = ACC1.ACS_SUB_SET_ID AND
     ADE1.PC_LANG_ID = VPC_LANG_ID
    ) ACS_SUB_SE,
    (SELECT
     ADE2.DES_DESCRIPTION_SUMMARY
     FROM
     ACS_DESCRIPTION ADE2
     WHERE
     ADE2.ACS_PAYMENT_METHOD_ID = PAY.ACS_PAYMENT_METHOD_ID AND
     ADE2.PC_LANG_ID = VPC_LANG_ID
    ) ACS_PAYMENT_MET,
    (SELECT
     ADE3.DES_DESCRIPTION_SUMMARY
     FROM
     ACS_DESCRIPTION ADE3
     WHERE
     ADE3.ACS_VAT_DET_ACCOUNT_ID = SUP.ACS_VAT_DET_ACCOUNT_ID AND
     ADE3.PC_LANG_ID = VPC_LANG_ID
    ) ACS_VAT_DET_ACC,
    (SELECT
     ADE4.DES_DESCRIPTION_SUMMARY
     FROM
     ACS_DESCRIPTION ADE4
     WHERE
     ADE4.ACS_ACCOUNTING_ID = AUX.ACS_INVOICE_COLL_ID AND
     ADE4.PC_LANG_ID = VPC_LANG_ID
    ) ACS_INVOICE_COL,
    (SELECT
     ADE5.DES_DESCRIPTION_SUMMARY
     FROM
     ACS_DESCRIPTION ADE5
     WHERE
     ADE5.ACS_ACCOUNT_ID = AUX.ACS_PREP_COLL_ID AND
     ADE5.PC_LANG_ID = VPC_LANG_ID
    ) ACS_PREP_COL,
    (SELECT
     ADE6.DES_DESCRIPTION_SUMMARY
     FROM
     ACS_DESCRIPTION ADE6
     WHERE
     ADE6.ACS_ACCOUNT_ID = AUX.ACS_FINANCIAL_ACCOUNT_ID AND
     ADE6.PC_LANG_ID = VPC_LANG_ID
    ) ACS_FINANCIAL_ACC,
    SUP.CRE_TARIFF_BY_SET,
    THI.THI_CUSTOM_NUMBER
FROM
    PAC_PERSON PE2,
    PAC_PERSON PE1,
    PAC_THIRD THI,
    ACS_FIN_ACC_S_PAYMENT PAY,
    ACS_ACCOUNT ACC1,
    PAC_PERSON PER,
    PAC_SUPPLIER_PARTNER SUP,
    ACS_DESCRIPTION DES,
    ACS_ACCOUNT ACC2,
    ACS_AUXILIARY_ACCOUNT AUX,
    ACS_SUB_SET SUB
WHERE
    PER.PAC_PERSON_ID = SUP.PAC_SUPPLIER_PARTNER_ID
AND SUP.ACS_AUXILIARY_ACCOUNT_ID = ACC1.ACS_ACCOUNT_ID
AND SUP.ACS_FIN_ACC_S_PAYMENT_ID = PAY.ACS_FIN_ACC_S_PAYMENT_ID(+)
AND SUP.PAC_SUPPLIER_PARTNER_ID = THI.PAC_THIRD_ID
AND SUP.PAC_PAC_THIRD_1_ID = PE1.PAC_PERSON_ID(+)
AND SUP.PAC_PAC_THIRD_2_ID = PE2.PAC_PERSON_ID(+)
AND SUP.ACS_AUXILIARY_ACCOUNT_ID = AUX.ACS_AUXILIARY_ACCOUNT_ID (+)
AND AUX.ACS_AUXILIARY_ACCOUNT_ID = ACC2.ACS_ACCOUNT_ID
AND ACC2.ACS_ACCOUNT_ID = DES.ACS_ACCOUNT_ID
AND ACC2.ACS_SUB_SET_ID = SUB.ACS_SUB_SET_ID
AND SUB.C_TYPE_SUB_SET = 'AUX'
AND (
     (PER.PER_NAME >= PARAMETER_0 AND PER.PER_NAME <= PARAMETER_1 )
     OR
     (PARAMETER_0 IS NULL AND PARAMETER_1 IS NULL)
    )
AND ((SUP.A_DATECRE >= PARAM_A_DATECRE_START AND SUP.A_DATECRE <= PARAM_A_DATECRE_END) OR PARAM_A_DATECRE_START IS NULL)
AND (SUP.A_IDCRE = PARAM_A_IDCRE
     OR (PARAM_A_IDCRE IS NULL
         AND (PARAMETER_4<>0 OR PARAMETER_3 <> '1')
        )
    )
AND ((SUP.A_DATEMOD >= PARAM_A_DATEMOD_START AND SUP.A_DATEMOD <= PARAM_A_DATEMOD_END) OR PARAM_A_DATEMOD_START IS NULL)
AND (SUP.A_IDMOD = PARAM_A_IDMOD
     OR (PARAM_A_IDMOD IS NULL
         AND (PARAMETER_4<>0 OR PARAMETER_3 <> '2')
        )
    )
AND DES.PC_LANG_ID = VPC_LANG_ID
;
END PAC_SUPPLIER_FORM_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_SUPPLIER_FORM.RPT
 @CREATED AWU Jan.2009
 PARAMETER_0 PAC_SUPPLIER_PARTNER_ID
*/
PROCEDURE PAC_PREC_MAT_SUP_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_99     IN       NUMBER
   )
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
BEGIN

PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
    SUP.C_MATERIAL_MGNT_MODE
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_MATERIAL_MGNT_MODE',SUP.C_MATERIAL_MGNT_MODE,VPC_LANG_ID) MGNT_MODE
,   THI.GCO_ALLOY_ID
,   GAL.GAL_ALLOY_REF
,   GAL.GAL_ALLOY_DESCR
,   THI.DIC_BASIS_MATERIAL_ID
,   (SELECT
    DIT.DIT_DESCR
    FROM
    DICO_DESCRIPTION DIT
    WHERE
    DIT.DIT_TABLE = 'DIC_BASIS_MATERIAL' AND
    DIT.DIT_CODE = THI.DIC_BASIS_MATERIAL_ID AND
    DIT.PC_LANG_ID = VPC_LANG_ID
    ) DIT_DESCR
,   THI.THA_MANAGED
,   THI.THA_NUMBER
,   SUP.C_THIRD_MATERIAL_RELATION_TYPE
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_THIRD_MATERIAL_RELATION_TYPE',SUP.C_THIRD_MATERIAL_RELATION_TYPE,VPC_LANG_ID) THIRD_MATERIAL_RELATION_TYPE
,   SUP.C_WEIGHING_MGNT
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_WEIGHING_MGNT',SUP.C_WEIGHING_MGNT,VPC_LANG_ID) WEIGHING_MGNT
,   SUP.C_ADV_MATERIAL_MODE
,   PCS.PC_FUNCTIONS.GETDESCODEDESCR('C_ADV_MATERIAL_MODE',SUP.C_ADV_MATERIAL_MODE,VPC_LANG_ID) ADV_MATERIAL_MODE
FROM
    PAC_SUPPLIER_PARTNER SUP
,   PAC_THIRD_ALLOY THI
,   GCO_ALLOY GAL
WHERE
    SUP.PAC_SUPPLIER_PARTNER_ID = THI.PAC_SUPPLIER_PARTNER_ID (+)
AND THI.GCO_ALLOY_ID = GAL.GCO_ALLOY_ID (+)
AND SUP.PAC_SUPPLIER_PARTNER_ID = PARAMETER_99
;
END PAC_PREC_MAT_SUP_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_ADDRESS_FORM.RPT
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_ADDRESS_FORM_RPT_PK (
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_0      IN       VARCHAR2,
      parameter_1      IN       VARCHAR2,
      parameter_3      IN       VARCHAR2,
      parameter_4      IN       VARCHAR2,
      parameter_5      IN       VARCHAR2,
      parameter_6      IN       VARCHAR2
   )
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
      PARAM_A_DATECRE_START     DATE;
      PARAM_A_DATECRE_END       DATE;
      PARAM_A_IDCRE             VARCHAR2(5);
      PARAM_A_DATEMOD_START     DATE;
      PARAM_A_DATEMOD_END       DATE;
      PARAM_A_IDMOD             VARCHAR2(5);

BEGIN
      CASE PARAMETER_3
      WHEN '0'
      THEN
         NULL;

      WHEN '1'
      THEN
         IF
            PARAMETER_4 = '0'
         THEN
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDCRE := PARAMETER_6;
            END IF;
         ELSE
            PARAM_A_DATECRE_START := PARAMETER_4;
            PARAM_A_DATECRE_END   := PARAMETER_5;
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDCRE := PARAMETER_6;
            END IF;
         END IF;

      WHEN '2'
      THEN
         IF
            PARAMETER_4 = '0'
         THEN
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDMOD := PARAMETER_6;
            END IF;
         ELSE
            PARAM_A_DATEMOD_START := PARAMETER_4;
            PARAM_A_DATEMOD_END   := PARAMETER_5;
            IF
               PARAMETER_6 IS NOT NULL
            THEN
               PARAM_A_IDMOD := PARAMETER_6;
            END IF;
         END IF;

      ELSE
         null;

      END CASE;

PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
    PER.PAC_PERSON_ID
,   PER.DIC_PERSON_POLITNESS_ID
,   PER.PER_NAME
,   PER.PER_FORENAME
,   PER.PER_SHORT_NAME
,   PER.PER_CONTACT
,   PER.PER_COMMENT
,   PER.PER_ACTIVITY
,   PER.PER_KEY1
,   PER.PER_KEY2
,   PER.DIC_FREE_CODE1_ID
,   PER.DIC_FREE_CODE2_ID
,   PER.DIC_FREE_CODE3_ID
,   PER.DIC_FREE_CODE4_ID
,   PER.DIC_FREE_CODE5_ID
,   PER.DIC_FREE_CODE6_ID
,   PER.DIC_FREE_CODE7_ID
,   PER.DIC_FREE_CODE8_ID
,   PER.DIC_FREE_CODE9_ID
,   PER.DIC_FREE_CODE10_ID
,   THI.DIC_THIRD_ACTIVITY_ID
,   THI.DIC_THIRD_AREA_ID
,   THI.DIC_JURIDICAL_STATUS_ID
,   THI.DIC_CITI_CODE_ID
,   THI.THI_NO_SIREN
,   THI.THI_NO_SIRET
,   THI.THI_NO_TVA
,   THI.THI_NO_INTRA
,   THI.THI_CUSTOM_NUMBER
,   THI.PAC_PAC_PERSON_ID
FROM
    PAC_THIRD THI,
    PAC_PERSON PER
WHERE
    PER.PAC_PERSON_ID = THI.PAC_THIRD_ID (+)
AND (
     (PER.PER_NAME >= PARAMETER_0 AND PER.PER_NAME <= PARAMETER_1 )
     OR
     (PARAMETER_0 IS NULL AND PARAMETER_1 IS NULL)
    )
AND ((PER.A_DATECRE >= PARAM_A_DATECRE_START AND PER.A_DATECRE <= PARAM_A_DATECRE_END) OR PARAM_A_DATECRE_START IS NULL)
AND (PER.A_IDCRE = PARAM_A_IDCRE
     OR (PARAM_A_IDCRE IS NULL
         AND (PARAMETER_4<>0 OR PARAMETER_3 <> '1')
        )
    )
AND ((PER.A_DATEMOD >= PARAM_A_DATEMOD_START AND PER.A_DATEMOD <= PARAM_A_DATEMOD_END) OR PARAM_A_DATEMOD_START IS NULL)
AND (PER.A_IDMOD = PARAM_A_IDMOD
     OR (PARAM_A_IDMOD IS NULL
         AND (PARAMETER_4<>0 OR PARAMETER_3 <> '2')
        )
    )
;
END PAC_ADDRESS_FORM_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_ADDRESS_FORM.RPT
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_ASSOCIE_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_99     IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    ADR.PAC_PERSON_ID
,   ADR.ADD_ADDRESS1
,   ADR.ADD_FORMAT
,   THI.PAC_PAC_PERSON_ID
FROM
    PAC_THIRD THI,
    PAC_ADDRESS ADR
WHERE
    THI.PAC_PAC_PERSON_ID = ADR.PAC_PERSON_ID (+)
AND ADR.PAC_PERSON_ID = PARAMETER_99
;
END PAC_ASSOCIE_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_EVENT_REP.RPT
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_EVENT_REP_RPT_PK  (
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_0      IN       NUMBER,
      parameter_1      IN       VARCHAR2,
      parameter_2      IN       VARCHAR2,
      parameter_3      IN       VARCHAR2,
      parameter_6      IN       VARCHAR2
   )
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
      PARA_PRIVATE              NUMBER(1);
BEGIN
    CASE PARAMETER_3
    WHEN '1'
    THEN PARA_PRIVATE := 0;

    WHEN '2'
    THEN PARA_PRIVATE := 1;

    WHEN '0'
    THEN PARA_PRIVATE := 2;

    ELSE null;

    END CASE;
PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
    EVE.PAC_EVENT_ID
,   EVE.PAC_PERSON_ID
,   EVE.EVE_TEXT
,   EVE.EVE_DATE
,   EVE.EVE_NUMBER
,   EVE.EVE_DATE_COMPLETED
,   EVO.EVE_TEXT EVE_TEXT_O
,   EVO.EVE_DATE EVE_DATE_O
,   DES.TYP_LONG_DESCRIPTION
,   DEO.TYP_LONG_DESCRIPTION  TYP_LONG_DESCRIPTION_O
,   LEA.LEA_LABEL
,   PER.PER_SHORT_NAME
,   PAS.PAC_PAC_PERSON_ID
,   USR.PC_USER_ID
,   USR.USE_NAME
,   USR.USE_DESCR
FROM
    PAC_EVENT EVE
,   PAC_PERSON PER
,   PAC_PERSON_ASSOCIATION PAS
,   PCS.PC_USER USR
,   PAC_EVENT EVO
,   PAC_EVENT_TYPE TYO
,   PAC_EVENT_TYPE_DESCR DEO
,   PAC_EVENT_TYPE TYP
,   PAC_EVENT_TYPE_DESCR DES
,   PAC_LEAD LEA
,   THE (SELECT CAST(DOC_DOCUMENT_LIST_FUNCTIONS.IN_LIST(PARAMETER_6,';') AS CHAR_TABLE_TYPE) FROM DUAL) DIC_EVENT_DOMAIN_ID_LIST
WHERE
    EVE.PAC_EVENT_ID = PER.PAC_PERSON_ID (+)
AND EVE.PAC_ASSOCIATION_ID = PAS.PAC_PERSON_ASSOCIATION_ID (+)
AND EVE.EVE_USER_ID = USR.PC_USER_ID
AND EVE.PAC_PAC_EVENT_ID = EVO.PAC_EVENT_ID (+)
AND EVO.PAC_EVENT_TYPE_ID = TYO.PAC_EVENT_TYPE_ID (+)
AND TYO.PAC_EVENT_TYPE_ID = DEO.PAC_EVENT_TYPE_ID (+)
AND EVE.PAC_EVENT_TYPE_ID = TYP.PAC_EVENT_TYPE_ID
AND TYP.PAC_EVENT_TYPE_ID = DES.PAC_EVENT_TYPE_ID (+)
AND EVE.PAC_LEAD_ID = LEA.PAC_LEAD_ID (+)
AND EVE.EVE_ENDED = 1
AND EVE.EVE_DATE BETWEEN TO_DATE(PARAMETER_1,'YYYYMMDD') AND TO_DATE(PARAMETER_2,'YYYYMMDD')
AND (USR.PC_USER_ID = PARAMETER_0 OR PARAMETER_0 = 0)
AND (EVE.EVE_PRIVATE = PARA_PRIVATE OR PARA_PRIVATE = 2)
AND (TYP.DIC_EVENT_DOMAIN_ID = DIC_EVENT_DOMAIN_ID_LIST.COLUMN_VALUE OR PARAMETER_6 = '#')
AND (DES.PAC_EVENT_TYPE_ID IS NULL OR DES.PC_LANG_ID = VPC_LANG_ID)
AND (DEO.PAC_EVENT_TYPE_ID IS NULL OR DEO.PC_LANG_ID = VPC_LANG_ID)
;
END PAC_EVENT_REP_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_EVENT_PLA.RPT
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_EVENT_PLA_RPT_PK  (
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      procuser_lanid   IN       pcs.pc_lang.lanid%TYPE,
      parameter_0      IN       NUMBER,
      parameter_1      IN       VARCHAR2,
      parameter_2      IN       VARCHAR2,
      parameter_3      IN       VARCHAR2,
      parameter_6      IN       VARCHAR2
   )
IS
      VPC_LANG_ID               pcs.pc_lang.pc_lang_id%type;
      PARA_PRIVATE              NUMBER(1);
BEGIN
    CASE PARAMETER_3
    WHEN '1'
    THEN PARA_PRIVATE := 0;

    WHEN '2'
    THEN PARA_PRIVATE := 1;

    WHEN '0'
    THEN PARA_PRIVATE := 2;

    ELSE null;

    END CASE;
PCS.PC_I_LIB_SESSION.SETLANID (PROCUSER_LANID);

VPC_LANG_ID:= pcs.PC_I_LIB_SESSION.GetUserLangId;

OPEN AREFCURSOR FOR
SELECT
    EVE.PAC_EVENT_ID
,   EVE.PAC_PERSON_ID
,   EVE.EVE_TEXT
,   EVE.EVE_DATE
,   EVE.EVE_NUMBER
,   EVE.EVE_DATE_COMPLETED
,   EVO.EVE_TEXT EVE_TEXT_O
,   EVO.EVE_DATE EVE_DATE_O
,   DES.TYP_LONG_DESCRIPTION
,   DEO.TYP_LONG_DESCRIPTION  TYP_LONG_DESCRIPTION_O
,   LEA.LEA_LABEL
,   PER.PER_SHORT_NAME
,   PAS.PAC_PAC_PERSON_ID
,   USR.PC_USER_ID
,   USR.USE_NAME
,   USR.USE_DESCR
,   EVE.EVE_PERCENT_COMPLETE
FROM
    PAC_EVENT EVE
,   PAC_PERSON PER
,   PAC_PERSON_ASSOCIATION PAS
,   PCS.PC_USER USR
,   PAC_EVENT EVO
,   PAC_EVENT_TYPE TYO
,   PAC_EVENT_TYPE_DESCR DEO
,   PAC_EVENT_TYPE TYP
,   PAC_EVENT_TYPE_DESCR DES
,   PAC_LEAD LEA
,   THE (SELECT CAST(DOC_DOCUMENT_LIST_FUNCTIONS.IN_LIST(PARAMETER_6,';') AS CHAR_TABLE_TYPE) FROM DUAL) DIC_EVENT_DOMAIN_ID_LIST
WHERE
    EVE.PAC_EVENT_ID = PER.PAC_PERSON_ID (+)
AND EVE.PAC_ASSOCIATION_ID = PAS.PAC_PERSON_ASSOCIATION_ID (+)
AND EVE.EVE_USER_ID = USR.PC_USER_ID
AND EVE.PAC_PAC_EVENT_ID = EVO.PAC_EVENT_ID (+)
AND EVO.PAC_EVENT_TYPE_ID = TYO.PAC_EVENT_TYPE_ID (+)
AND TYO.PAC_EVENT_TYPE_ID = DEO.PAC_EVENT_TYPE_ID (+)
AND EVE.PAC_EVENT_TYPE_ID = TYP.PAC_EVENT_TYPE_ID
AND TYP.PAC_EVENT_TYPE_ID = DES.PAC_EVENT_TYPE_ID (+)
AND EVE.PAC_LEAD_ID = LEA.PAC_LEAD_ID (+)
AND EVE.EVE_ENDED = 0
AND EVE.EVE_DATE BETWEEN TO_DATE(PARAMETER_1,'YYYYMMDD') AND TO_DATE(PARAMETER_2,'YYYYMMDD')
AND (USR.PC_USER_ID = PARAMETER_0 OR PARAMETER_0 = 0)
AND (EVE.EVE_PRIVATE = PARA_PRIVATE OR PARA_PRIVATE = 2)
AND (TYP.DIC_EVENT_DOMAIN_ID = DIC_EVENT_DOMAIN_ID_LIST.COLUMN_VALUE OR PARAMETER_6 = '#')
AND (DES.PAC_EVENT_TYPE_ID IS NULL OR DES.PC_LANG_ID = VPC_LANG_ID)
AND (DEO.PAC_EVENT_TYPE_ID IS NULL OR DEO.PC_LANG_ID = VPC_LANG_ID)
;
END PAC_EVENT_PLA_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_EVENT_REP.RPT PAC_EVENT_PLA.RPT
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_PERSON_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_0      IN       NUMBER
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    DCO.DCO_DEFAULT1
,   DCO.DCO_DEFAULT2
,   DCO.DCO_DEFAULT3
,   ADR.PAC_ADDRESS_ID
,   ADR.PAC_PERSON_ID
,   ADR.ADD_ADDRESS1
,   ADR.ADD_FORMAT
,   ADR.ADD_PRINCIPAL
,   COM.DIC_COMMUNICATION_TYPE_ID
,   COM.COM_EXT_NUMBER
,   COM.COM_INT_NUMBER
,   COM.COM_AREA_CODE
,   PER.PER_NAME
,   PER.PER_FORENAME
,   PER.PER_ACTIVITY
FROM
    DIC_COMMUNICATION_TYPE DCO
,   PAC_ADDRESS ADR
,   PAC_COMMUNICATION COM
,   PAC_PERSON PER
WHERE
    PER.PAC_PERSON_ID = ADR.PAC_PERSON_ID (+)
AND PER.PAC_PERSON_ID = COM.PAC_PERSON_ID (+)
AND COM.DIC_COMMUNICATION_TYPE_ID = DCO.DIC_COMMUNICATION_TYPE_ID (+)
AND PER.PAC_PERSON_ID = PARAMETER_0
;
END PAC_PERSON_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_EVENT_REP.RPT PAC_EVENT_PLA.RPT
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_EVE_CONTACT_SUB_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_0      IN       NUMBER,
      parameter_8      IN       VARCHAR
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    COM.DIC_COMMUNICATION_TYPE_ID
,   COM.COM_EXT_NUMBER
,   COM.COM_INT_NUMBER
,   COM.COM_AREA_CODE
,   PER.PER_NAME
,   PER.PER_FORENAME
,   PAS.PAC_PERSON_ID
,   PAS.DIC_ASSOCIATION_TYPE_ID
FROM
    PAC_PERSON_ASSOCIATION PAS
,   PAC_PERSON PER
,   PAC_COMMUNICATION COM
,   THE (SELECT CAST(DOC_DOCUMENT_LIST_FUNCTIONS.IN_LIST(PARAMETER_8,';') AS CHAR_TABLE_TYPE) FROM DUAL) DIC_ASSOCIATION_TYPE_ID_LIST
WHERE
    PAS.PAC_PERSON_ID = PER.PAC_PERSON_ID
AND PER.PAC_PERSON_ID = COM.PAC_PERSON_ID (+)
AND (PAS.DIC_ASSOCIATION_TYPE_ID = DIC_ASSOCIATION_TYPE_ID_LIST.COLUMN_VALUE OR PARAMETER_8 = '#')
AND PAS.PAC_PERSON_ID = PARAMETER_0
;
END PAC_EVE_CONTACT_SUB_RPT_PK
;

/*
 STORED PROCEDURE USED FOR THE REPORT PAC_LEADS
 @CREATED AWU Jan.2009
*/
PROCEDURE PAC_LEADS_RPT_PK(
      arefcursor       IN OUT   crystal_cursor_types.dualcursortyp,
      parameter_0      IN       VARCHAR,
      parameter_1      IN       VARCHAR
   )
IS

BEGIN

OPEN AREFCURSOR FOR
SELECT
    LEA.PAC_PERSON_ID
,   LEA.LEA_LABEL
,   LEA.DIC_LEA_CATEGORY_ID
,   LEA.DIC_LEA_SUBCATEGORY_ID
,   LEA.DIC_LEA_CLASSIFICATION_ID
,   LEA.C_OPPORTUNITY_STATUS
,   LEA.DIC_LEA_RATING_ID
,   LEA.LEA_BUDGET_AMOUNT
,   LEA.LEA_PROJECT_BEGIN_DATE
,   LEA.LEA_COMPANY_NAME
,   PER.PER_NAME
,   REP.REP_DESCR
,   STE.STE_DESCRIPTION
,   CUR.CURRENCY
FROM
    PAC_LEAD LEA
,   PAC_PERSON PER
,   PAC_SALE_TERRITORY STE
,   PAC_REPRESENTATIVE REP
,   PCS.PC_CURR CUR
WHERE
    LEA.PAC_PERSON_ID = PER.PAC_PERSON_ID (+)
AND LEA.PAC_SALE_TERRITORY_ID = STE.PAC_SALE_TERRITORY_ID (+)
AND LEA.PAC_REPRESENTATIVE_ID = REP.PAC_REPRESENTATIVE_ID (+)
AND LEA.PC_CURR_ID = CUR.PC_CURR_ID (+)
AND LEA.LEA_DATE BETWEEN TO_DATE(PARAMETER_0,'YYYY-MM-DD') AND TO_DATE(PARAMETER_1,'YYYY-MM-DD')
;
END PAC_LEADS_RPT_PK
;

END PAC_RPT;
